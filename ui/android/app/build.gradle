plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.mozilla.rust-android-gradle.rust-android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "org.extendedmind.android"
        // SDK is limited to 21 due to 64bit ARM NDK not available for anything lower, i.e.
        // $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64/bin/aarch64-linux-android21-clang
        // is the lowest
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
}

cargo {
    module = "../jni"
    targets = ["arm", "arm64", "x86", "x86_64"]
    libname = "extendedmind_ui_android_jni"
}

def composeVersion = '1.1.1'

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.compose.material:material:${composeVersion}"
    implementation "androidx.compose.ui:ui:${composeVersion}"
    implementation "androidx.compose.ui:ui-tooling:${composeVersion}"
    implementation "androidx.compose.runtime:runtime:${composeVersion}"
    implementation "androidx.activity:activity-compose:1.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1"

    // Unnecessary but linter complains about AndroidManifest.mf Bazel-hack if this is not here
    implementation "androidx.startup:startup-runtime:${composeVersion}"
    implementation 'org.capnproto:runtime:0.1.13'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

// Copy Capn' Proto source files
gradle.projectsEvaluated {
     preBuild.dependsOn(copyCapnpSources)
}
task copyCapnpSources(type: Copy) {
    from '../../../bazel-out/darwin-fastbuild/bin/schema/src/'
    include "*.java"
    into 'src/main/java/org/extendedmind/schema/'
}

afterEvaluate {
    // The `cargoBuild` task isn't available until after evaluation.
    android.applicationVariants.all { variant ->
        def productFlavor = ""
        variant.productFlavors.each {
            productFlavor += "${it.name.capitalize()}"
        }
        def buildType = "${variant.buildType.name.capitalize()}"
        tasks["generate${productFlavor}${buildType}Assets"].dependsOn(tasks["cargoBuild"])
    }
}

tasks.whenTaskAdded { task ->
    if ((task.name == 'javaPreCompileDebug' || task.name == 'javaPreCompileRelease')) {
        task.dependsOn 'cargoBuild'
    }
}
