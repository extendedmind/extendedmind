
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.extendedmind</groupId>
    <artifactId>root</artifactId>
    <version>0-SNAPSHOT</version>
  </parent>
  <artifactId>backend</artifactId>
  <packaging>jar</packaging>
  <name>Extended Mind :: Backend</name>
  <description>Extended Mind Backend</description>
  <url>https://github.com/extendedmind/extendedmind</url>
  <inceptionYear>2013</inceptionYear>

  <licenses>
    <license>
      <name>GNU Affero General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/agpl-3.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:extendedmind/extendedmind.git</connection>
    <developerConnection>scm:git:git@github.com:extendedmind/extendedmind.git</developerConnection>
    <url>git@github.com:extendedmind/extendedmind.git</url>
  </scm>

  <developers>
    <developer>
      <id>ttiurani</id>
      <name>Timo Tiuraniemi</name>
      <email>timo.tiuraniemi@iki.fi</email>
    </developer>
  </developers>

  <properties>
    <neo4j.version>2.2.3</neo4j.version>
    <spray.version>1.3.3</spray.version>
    <akka.version>2.3.9</akka.version>
  </properties>

  <dependencies>

    <!-- Scala -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>

    <!-- Spray.io -->
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-io_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-can_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-routing_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-json_${scala.version.short}</artifactId>
      <version>1.3.1</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
	<dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-client_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Neo4j -->
    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>neo4j-scala</artifactId>
      <version>${neo4j.version}.1</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>neo4j-uuid</artifactId>
      <version>${neo4j.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>neo4j-timestamp</artifactId>
      <version>${neo4j.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j.app</groupId>
      <artifactId>neo4j-server</artifactId>
      <version>${neo4j.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j.app</groupId>
      <artifactId>neo4j-server</artifactId>
      <classifier>static-web</classifier>
      <version>${neo4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-enterprise</artifactId>
      <version>${neo4j.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Scaldi -->
    <dependency>
      <groupId>com.github.scaldi</groupId>
      <artifactId>scaldi_${scala.version.short}</artifactId>
      <version>0.2</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-slf4j_${scala.version.short}</artifactId>
      <version>${akka.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.0.9</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.9</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>logback-mongodb-appender</artifactId>
      <version>1.0.9.3</version>
      <scope>compile</scope>
    </dependency>

    <!-- Security -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.8</version>
      <scope>compile</scope>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-testkit_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-testkit_${scala.version.short}</artifactId>
      <version>${akka.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>neo4j-scala</artifactId>
      <version>0.1-SNAPSHOT</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-kernel</artifactId>
      <version>${neo4j.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-io</artifactId>
      <version>${neo4j.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version.short}</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.zeroturnaround</groupId>
      <artifactId>zt-zip</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-backup-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/backend-runtime-dependencies</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>${skipJUnitTests}</skipTests>
          <includes>
            <include>**/*Spec.*</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skipTests>${skipScalaTestTests}</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/logs</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/dist.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jolokia</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <images>
            <image>
              <name>extendedmind/mongodb-conf</name>
              <alias>mongodb-conf</alias>
              <build>
                <from>ubuntu:14.04</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/etc/confd</basedir>
                  <descriptor>mongodb-conf-assembly.xml</descriptor>
                </assembly>
                <volumes>
                  <volume>/etc/confd/conf.d/mongodb</volume>
                  <volume>/etc/confd/templates/mongodb</volume>
                  <volume>/etc/mongodb</volume>
                </volumes>
              </build>
            </image>
            <image>
              <name>extendedmind/mongodb-data</name>
              <alias>mongodb-data</alias>
              <build>
                <from>ubuntu:14.04</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/var/extendedmind</basedir>
                  <descriptor>mongodb-data-assembly.xml</descriptor>
                </assembly>
                <volumes>
                  <volume>/var/extendedmind/mongodb</volume>
                </volumes>
              </build>
            </image>
            <image>
              <name>extendedmind/mongodb</name>
              <alias>mongodb</alias>
              <build>
                <from>mongo:3</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                </tags>
                <ports>
                  <port>27017</port>
                </ports>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/etc</basedir>
                  <descriptor>mongodb-assembly.xml</descriptor>
                </assembly>
                <entryPoint>
                  <exec>
                    <arg>/usr/bin/mongod</arg>
                    <arg>--config</arg>
                    <arg>/etc/mongodb/mongodb.conf</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
            <image>
              <name>extendedmind/backend-conf</name>
              <alias>backend-conf</alias>
              <build>
                <from>ubuntu:14.04</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/etc/confd</basedir>
                  <descriptor>backend-conf-assembly.xml</descriptor>
                </assembly>
                <volumes>
                  <volume>/etc/confd/conf.d/backend</volume>
                  <volume>/etc/confd/templates/backend</volume>
                  <volume>/etc/extendedmind</volume>
                </volumes>
              </build>
            </image>
            <image>
              <name>extendedmind/backend-data</name>
              <alias>backend-data</alias>
              <build>
                <from>ubuntu:14.04</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/var/extendedmind/backend</basedir>
                  <descriptor>backend-data-assembly.xml</descriptor>
                </assembly>
                <volumes>
                  <volume>/var/extendedmind/backend</volume>
                </volumes>
              </build>
            </image>
            <image>
              <name>extendedmind/backend</name>
              <alias>backend</alias>
              <build>
                <from>java:8</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <ports>
                  <port>8081</port>
                  <!-- Neo4j backup port -->
                  <port>6362</port>
                  <!-- Neo4j cluster heartbeat -->
                  <port>5001</port>
                  <!-- Neo4j cluster transaction -->
                  <port>6001</port>
                </ports>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/usr/src/extendedmind</basedir>
                  <descriptor>backend-assembly.xml</descriptor>
                </assembly>
                <entryPoint>
                  <exec>
                    <arg>/usr/bin/java</arg>
                    <arg>-server</arg>
                    <arg>-XX:+PrintCommandLineFlags</arg>
                    <!-- Neo4j suggests to use this -->
                    <arg>-XX:+UseConcMarkSweepGC</arg>
                    <arg>-Dconfig.file=/etc/extendedmind/application.conf</arg>
                    <arg>-Dlogback.configurationFile=/etc/extendedmind/logback.xml</arg>
                    <arg>-cp</arg>
                    <arg>/usr/src/extendedmind/lib/*</arg>
                    <arg>org.extendedmind.Server</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
            <image>
              <name>extendedmind/backend-backup</name>
              <alias>backend-backup</alias>
              <build>
                <from>extendedmind/cloud-sdk</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/usr/src/extendedmind</basedir>
                  <descriptor>backend-backup-assembly.xml</descriptor>
                </assembly>
                <entryPoint>
                  <exec>
                    <arg>/usr/src/extendedmind/run-backend-script.pl</arg>
                    <arg>backup</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
            <image>
              <name>extendedmind/backend-restore</name>
              <alias>backend-restore</alias>
              <build>
                <from>extendedmind/cloud-sdk</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/usr/src/extendedmind</basedir>
                  <descriptor>backend-restore-assembly.xml</descriptor>
                </assembly>
                <entryPoint>
                  <exec>
                    <arg>/usr/src/extendedmind/run-backend-script.pl</arg>
                    <arg>restore</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
             <id>build</id>
             <phase>package</phase>
             <goals>
               <goal>build</goal>
             </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
