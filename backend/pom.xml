<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.extendedmind</groupId>
    <artifactId>root</artifactId>
    <version>0-SNAPSHOT</version>
  </parent>
  <artifactId>backend</artifactId>
  <packaging>jar</packaging>
  <name>Extended Mind :: Backend</name>
  <description>Extended Mind Backend</description>
  <url>https://github.com/extendedmind/extendedmind</url>
  <inceptionYear>2013</inceptionYear>

  <licenses>
    <license>
      <name>GNU Affero General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/agpl-3.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:extendedmind/extendedmind.git</connection>
    <developerConnection>scm:git:git@github.com:extendedmind/extendedmind.git</developerConnection>
    <url>git@github.com:extendedmind/extendedmind.git</url>
  </scm>

  <developers>
    <developer>
      <id>ttiurani</id>
      <name>Timo Tiuraniemi</name>
      <email>timo.tiuraniemi@iki.fi</email>
    </developer>
  </developers>

  <properties>
    <root.project.basedir>${project.parent.basedir}</root.project.basedir>
    <neo4j.version>3.1.2</neo4j.version>
    <spray.version>1.3.3</spray.version>
    <akka.version>2.3.9</akka.version>
  </properties>

  <dependencies>

    <!-- Scala -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>

    <!-- Spray.io -->
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-io_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-can_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-routing_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-json_${scala.version.short}</artifactId>
      <version>1.3.2</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-client_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Neo4j -->
    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>neo4j-scala</artifactId>
      <version>${neo4j.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>neo4j-uuid</artifactId>
      <version>${neo4j.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>neo4j-timestamp</artifactId>
      <version>${neo4j.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j.app</groupId>
      <artifactId>neo4j-server</artifactId>
      <version>${neo4j.version}</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-enterprise</artifactId>
      <version>${neo4j.version}</version>
      <type>jar</type>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>org.neo4j</groupId>
          <artifactId>neo4j-security-enterprise</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Scaldi -->
    <dependency>
      <groupId>org.scaldi</groupId>
      <artifactId>scaldi_${scala.version.short}</artifactId>
      <version>0.5.6</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Binary Diff and Pickle -->
    <dependency>
      <groupId>com.nitorcreations</groupId>
      <artifactId>javaxdelta</artifactId>
      <version>1.5</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>me.chrons</groupId>
      <artifactId>boopickle_${scala.version.short}</artifactId>
      <version>1.1.0</version>
      <type>jar</type>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-slf4j_${scala.version.short}</artifactId>
      <version>${akka.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.0.9</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.9</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>logback-mongodb-appender</artifactId>
      <version>1.0.9.3</version>
      <scope>compile</scope>
    </dependency>

    <!-- Security and Versioning -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.8</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.vdurmont</groupId>
      <artifactId>semver4j</artifactId>
      <version>2.0.1</version>
      <scope>compile</scope>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>io.spray</groupId>
      <artifactId>spray-testkit_${scala.version.short}</artifactId>
      <version>${spray.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-testkit_${scala.version.short}</artifactId>
      <version>${akka.version}</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-kernel</artifactId>
      <version>${neo4j.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-io</artifactId>
      <version>${neo4j.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version.short}</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.zeroturnaround</groupId>
      <artifactId>zt-zip</artifactId>
      <type>jar</type>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-backup-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/backend-runtime-dependencies</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>${skipJUnitTests}</skipTests>
          <includes>
            <include>**/*Spec.*</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jvmArgs>
            <jvmArg>-Xss8M</jvmArg>
          </jvmArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skipTests>${skipScalaTestTests}</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/logs</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/scripts.xml</descriptor>
            <descriptor>src/main/assembly/dist.xml</descriptor>
            <descriptor>src/main/assembly/runtime-dependencies.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-maven-plugin</artifactId>
        <configuration>
          <images>
            <image>
              <name>quay.io/extendedmind/backend</name>
              <alias>backend</alias>
              <build>
                <from>quay.io/extendedmind/openjdk:openjdk-8u121</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <ports>
                  <!-- Backend port -->
                  <port>8081</port>
                  <!-- Neo4j backup port -->
                  <port>6362</port>
                  <!-- HA ports don't need to be opened because HA communication needs to happen in an in-container subnet created with e.g. Flannel -->
                </ports>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/app/backend</basedir>
                  <descriptor>backend-assembly.xml</descriptor>
                </assembly>
                <workdir>/app/backend</workdir>
                <entryPoint>
                  <exec>
                    <arg>/usr/bin/java</arg>
                    <arg>-server</arg>
                    <arg>-XX:+PrintCommandLineFlags</arg>
                    <!-- Neo4j suggests to use this -->
                    <arg>-XX:+UseConcMarkSweepGC</arg>
                    <arg>-Dextendedmind.neo4j.storeDir=/app/backend-data</arg>
                  </exec>
                </entryPoint>
                <cmd>
                  <arg>-cp</arg>
                  <arg>/app/backend/lib/*</arg>
                  <arg>org.extendedmind.Server</arg>
                </cmd>
              </build>
            </image>
            <image>
              <name>quay.io/extendedmind/backend-discovery</name>
              <alias>backend-discovery</alias>
              <build>
                <from>quay.io/extendedmind/cloudsdk:cloudsdk-155.0.0-3</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/app</basedir>
                  <descriptor>backend-discovery-assembly.xml</descriptor>
                </assembly>
                <workdir>/app</workdir>
                <entryPoint>
                  <exec>
                    <arg>/app/backend-discovery/generate-neo4j-properties.sh</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
            <image>
              <name>quay.io/extendedmind/backend-backup</name>
              <alias>backend-backup</alias>
              <build>
                <from>quay.io/extendedmind/cloudsdk:cloudsdk-155.0.0-2</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <user>java:java:java</user>
                  <mode>dir</mode>
                  <basedir>/app/backend-backup</basedir>
                  <descriptor>backend-backup-assembly.xml</descriptor>
                </assembly>
                <workdir>/app/backend-backup</workdir>
                <entryPoint>
                  <exec>
                    <arg>/app/backend-backup/backend-backup.sh</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
            <image>
              <name>quay.io/extendedmind/backend-restore</name>
              <alias>backend-restore</alias>
              <build>
                <from>quay.io/extendedmind/cloudsdk:cloudsdk-155.0.0-3</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/app/backend-restore</basedir>
                  <descriptor>backend-restore-assembly.xml</descriptor>
                </assembly>
                <workdir>/app/backend-restore</workdir>
                <entryPoint>
                  <exec>
                    <arg>/app/backend-restore/backend-restore.sh</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
            <image>
              <name>quay.io/extendedmind/sync-folder</name>
              <alias>sync-folder</alias>
              <build>
                <from>quay.io/extendedmind/cloudsdk:cloudsdk-155.0.0-3</from>
                <maintainer>timo.tiuraniemi@iki.fi</maintainer>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <basedir>/app/sync-folder</basedir>
                  <descriptor>sync-folder-assembly.xml</descriptor>
                </assembly>
                <workdir>/app</workdir>
                <entryPoint>
                  <exec>
                    <arg>/app/sync-folder/sync-folder.sh</arg>
                  </exec>
                </entryPoint>
              </build>
            </image>
          </images>
          <resources>
            <labels>
              <all>
                <property>
                  <name>app</name>
                  <value>extendedmind</value>
                </property>
                <property>
                  <name>tier</name>
                  <value>backend</value>
                </property>
              </all>
            </labels>
          </resources>
          <profile>main</profile>
        </configuration>
        <executions>
          <execution>
            <id>build</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
              <goal>resource</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-dependency-plugin
                    </artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
