apiVersion: apps/v1beta1
spec:
  serviceName: "backend"
  replicas: 3
  template:
    metadata:
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "backend-discovery",
                "image": "quay.io/extendedmind/backend-discovery:${project.version}",
                "args": ["backend-dep", "/app/backend-conf", "HA_BOOTSTRAP"],
                "volumeMounts": [
                    {
                        "name": "confdir",
                        "mountPath": "/app/backend-conf"
                    }
                ]
            },
            {
                "name": "backend-access",
                "image": "busybox",
                "imagePullPolicy": "IfNotPresent",
                "command": ["sh", "-c", "chown -R 1000:1000 /app/backend-data"],
                "volumeMounts": [
                    {
                        "name": "datadir",
                        "mountPath": "/app/backend-data"
                    }
                ]
            }
        ]'
    spec:
      containers:
        - name: backend
          image: quay.io/extendedmind/backend:${project.version}
          args:
            - "-Dextendedmind.neo4j.operationMode=HA_BOOTSTRAP"
            - "-Dextendedmind.neo4j.propertiesFile=/app/backend-conf/neo4j.properties"
            # - "-Dextendedmind.commonCollectiveTitle=test"
            # - "-Dextendedmind.adminUserEmail=timo@extendedmind.org"
            # - "-Dextendedmind.adminUserPassword=timopwd"
            - "-cp"
            - "/app/backend/lib/*"
            - "org.extendedmind.Server"
          volumeMounts:
          - name: confdir
            mountPath: "/app/backend-conf"
          - name: datadir
            mountPath: "/app/backend-data"
          ports:
          - containerPort: 8081
            name: api
          # This needs to be enabled when in HA mode for cluster to come up.
          # readinessProbe:
          #   httpGet:
          #     path: /v2/ha/available
          #     port: api
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 5
      volumes:
        - name: confdir
          emptyDir: {}
        - name: datadir
          persistentVolumeClaim:
            claimName: datadir
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.beta.kubernetes.io/storage-class: standard
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100M
