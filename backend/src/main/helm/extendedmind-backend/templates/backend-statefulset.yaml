apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: backend
spec:
  replicas: {{ .Values.replicas }}
  serviceName: backend
  template:
    metadata:
      annotations:
      labels:
        app: extendedmind
        tier: backend
        role: server
        project: backend
        version: ${project.version}
        group: org.extendedmind
    spec:
      initContainers:
      - name: backend-discovery
        image: quay.io/extendedmind/backend-discovery:${project.version}
        env:
          - name: EXTENDEDMIND_STORE_DIR
            value: "/app/backend-data/neo4j"
          - name: EXTENDEDMIND_OPERATION_MODE
            value: {{ .Values.operationMode | quote }}
          - name: EXTENDEDMIND_TOKEN_SECRET
            value: {{ .Values.tokenSecret | quote }}
          - name: EXTENDEDMIND_SIGN_UP_METHOD
            value: {{ .Values.signUpMethod | quote }}
          - name: EXTENDEDMIND_SIGN_UP_MODE
            value: {{ .Values.signUpMode | quote }}
          - name: EXTENDEDMIND_EMAIL_PROVIDER
            value: {{ .Values.emailProvider | quote }}
          - name: EXTENDEDMIND_MAILGUN_DOMAIN
            value: {{ .Values.mailgunDomain | quote }}
          - name: EXTENDEDMIND_MAILGUN_API_KEY
            value: {{ .Values.mailgunApiKey | quote }}
          - name: EXTENDEDMIND_EMAIL_FROM
            value: {{ .Values.emailFrom | quote }}
          - name: EXTENDEDMIND_URL_ORIGIN
            value: {{ .Values.urlOrigin | quote }}
          - name: EXTENDEDMIND_UI
            value: {{ .Values.ui | quote }}
{{ if .Values.init }}
          - name: EXTENDEDMIND_COMMON_COLLECTIVE_TITLE
            value: {{ .Values.init.commonCollectiveTitle | quote }}
          - name: EXTENDEDMIND_ADMIN_USER_EMAIL
            value: {{ .Values.init.adminUserEmail | quote }}
          - name: EXTENDEDMIND_ADMIN_USER_PASSWORD
            value: {{ .Values.init.adminUserEmail | quote }}
{{ end }}
        args:
          - "/app/backend-conf"
          - "/app/backend-data"
          - {{ .Values.operationMode | quote }}
        volumeMounts:
        - name: confdir
          mountPath: "/app/backend-conf"
        - name: datadir
          mountPath: "/app/backend-data"
        - name: logdir
          mountPath: "/var/log/extendedmind"
{{ if .Values.backup.hostPath }}
        - name: backupdir
          mountPath: "/app/backend-backup-data"
{{ end }}
{{ if and (.Values.restore) ( ne .Values.operationMode "HA" ) }}
      - name: backend-restore
        image: quay.io/extendedmind/backend-restore:${project.version}
        args:
          - {{ .Values.restore.file | quote }}
          - "/app/backend-data"
          - {{ .Values.operationMode | quote }}
          - {{ .Values.fsPreCommand | quote }}
        volumeMounts: 
        - name: datadir
          mountPath: "/app/backend-data"
  {{ if .Values.restore.hostPath }}
        - name: restoredir
          mountPath: "/app/backend-restore-data"
  {{ end }}
{{ end }}
      containers:
        - name: backend
          image: quay.io/extendedmind/backend:${project.version}
          args:
            - "-Dconfig.file=/app/backend-conf/application.conf"
            - "-cp"
            - "/app/backend/lib/*"
            - "org.extendedmind.Server"
          volumeMounts:
          - name: confdir
            mountPath: "/app/backend-conf"
          - name: datadir
            mountPath: "/app/backend-data"
          - name: logdir
            mountPath: "/var/log/extendedmind"
          ports:
          - containerPort: 8081
            name: api
          - containerPort: 6362
            name: backup
          livenessProbe:
            httpGet:
              path: /v2/ha/available
              port: api
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
{{ if .Values.operationMode }}
  {{ if eq .Values.operationMode "HA" }}
          # NOTE: We need to wait for Kuberenetes issue #41015 to resolve for
          # this to work, because there is now way to properly update statefulset parameters.
          readinessProbe:
            httpGet:
              path: /v2/ha/ready
              port: api
            initialDelaySeconds: 10
            timeoutSeconds: 5
  {{ end }}
{{ end }}
      volumes:
        - name: confdir
          emptyDir: {}
        - name: logdir
          emptyDir: {}
        - name: datadir
          persistentVolumeClaim:
            claimName: datadir
{{ if .Values.backup.hostPath }}
        - name: backupdir
          hostPath:
            path: {{ .Values.backup.hostPath }}
{{ end }}
{{ if .Values.restore }}
  {{ if .Values.restore.hostPath }}
        - name: restoredir
          hostPath:
            path: {{ .Values.restore.hostPath }}
   {{ end }}
{{ end }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      labels:
        project: backend
        version: ${project.version}
        group: org.extendedmind
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storageClass }}
      resources:
        requests:
          storage: 100M
