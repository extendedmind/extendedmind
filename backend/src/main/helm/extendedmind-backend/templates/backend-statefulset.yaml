apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: backend
spec:
  replicas: {{ .Values.backendReplicas }}
  serviceName: backend-internal
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: extendedmind
        tier: backend
        role: server
        project: backend
        group: org.extendedmind
    spec:
      initContainers:
      - name: backend-discovery
        image: quay.io/extendedmind/backend-discovery:{{ .Values.backendDiscoveryVersion }}
        env:
          - name: EXTENDEDMIND_STORE_DIR
            value: "/app/backend-data/neo4j"
          - name: EXTENDEDMIND_OPERATION_MODE
            value: {{ .Values.operationMode | quote }}
          - name: EXTENDEDMIND_TOKEN_SECRET
            valueFrom:
              secretKeyRef:
                name: backend-secrets
                key: tokenSecret
          - name: EXTENDEDMIND_SIGN_UP_METHOD
            value: {{ .Values.signUpMethod | quote }}
          - name: EXTENDEDMIND_SIGN_UP_MODE
            value: {{ .Values.signUpMode | quote }}
          - name: EXTENDEDMIND_EMAIL_PROVIDER
            value: {{ .Values.emailProvider | quote }}
          - name: EXTENDEDMIND_MAILGUN_DOMAIN
            value: {{ .Values.mailgunDomain | quote }}
          - name: EXTENDEDMIND_MAILGUN_API_KEY
{{ if .Values.mailgunApiKey }}
            valueFrom:
              secretKeyRef:
                name: backend-secrets
                key: mailgunApiKey
{{ else }}
            value: ""
{{ end }}
          - name: EXTENDEDMIND_EMAIL_FROM
            value: {{ .Values.emailFrom | quote }}
          - name: EXTENDEDMIND_URL_ORIGIN
            value: {{ .Values.urlOrigin | quote }}
          - name: EXTENDEDMIND_UI
            value: {{ .Values.ui | quote }}
{{ if .Values.init }}
          - name: EXTENDEDMIND_COMMON_COLLECTIVE_TITLE
            value: {{ .Values.init.commonCollectiveTitle | quote }}
          - name: EXTENDEDMIND_ADMIN_USER_EMAIL
            value: {{ .Values.init.adminUserEmail | quote }}
          - name: EXTENDEDMIND_ADMIN_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: backend-secrets
                key: adminUserPassword
{{ end }}
        args:
          - "/app/backend-conf"
          - "/app/backend-data"
          - {{ .Values.operationMode | quote }}
        volumeMounts:
        - name: confdir
          mountPath: "/app/backend-conf"
        - name: datadir
          mountPath: "/app/backend-data"
        - name: logdir
          mountPath: "/var/log/extendedmind"
{{ if .Values.backup.hostPath }}
        - name: backupdir
          mountPath: "/app/backend-backup-data"
{{ end }}
{{ if and (.Values.restore) ( ne .Values.operationMode "HA" ) }}
      - name: backend-restore
        image: quay.io/extendedmind/backend-restore:{{ .Values.backendRestoreVersion }}
        args:
          - {{ .Values.restore.file | quote }}
          - "/app/backend-data"
          - {{ .Values.operationMode | quote }}
          - {{ .Values.fsPreCommand | quote }}
        volumeMounts: 
        - name: confdir
          mountPath: "/app/backend-conf"
        - name: datadir
          mountPath: "/app/backend-data"
  {{ if .Values.restore.hostPath }}
        - name: restoredir
          mountPath: "/app/backend-restore-data"
  {{ end }}
{{ end }}
      containers:
        - name: backend
          image: quay.io/extendedmind/backend:{{ .Values.backendVersion }}
          args:
            - "-Dconfig.file=/app/backend-conf/application.conf"
            - "-Dlogback.configurationFile=/app/backend-conf/logback.xml"
            - "-cp"
            - "/app/backend/lib/*"
            - "org.extendedmind.Server"
{{ if .Values.backendJavaToolOpts }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: {{ .Values.backendJavaToolOpts | quote }}
{{ end }}
          volumeMounts:
          - name: confdir
            mountPath: "/app/backend-conf"
          - name: datadir
            mountPath: "/app/backend-data"
          - name: logdir
            mountPath: "/var/log/extendedmind"
          ports:
          - containerPort: 8081
            name: api
          - containerPort: 6362
            name: backup
          livenessProbe:
            httpGet:
              path: /v2/ha/available
              port: api
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /v2/ha/ready
              port: api
            initialDelaySeconds: 10
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.backendResourceses | indent 12 }}
      volumes:
        - name: confdir
          emptyDir: {}
        - name: logdir
          emptyDir: {}
        - name: datadir
          persistentVolumeClaim:
            claimName: datadir
{{ if .Values.backup.hostPath }}
        - name: backupdir
          hostPath:
            path: {{ .Values.backup.hostPath }}
{{ end }}
{{ if .Values.restore }}
  {{ if .Values.restore.hostPath }}
        - name: restoredir
          hostPath:
            path: {{ .Values.restore.hostPath }}
   {{ end }}
{{ end }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      labels:
        project: backend
        group: org.extendedmind
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.dbStorageClass }}
      resources:
        requests:
          storage: {{ .Values.dbStorageSize }}
