# Extended Mind Default configuration file.
#
# This file needs to be overridden in production with "-Dconfig.file=[]".

extendedmind {
  neo4j {
    storeDir = "target/neo4j-test"
    isHighAvailability = false
    startServer = false
    serverPort = 7473
    # Optional Neo4j properties file
    #propertiesFile = "src/main/resources/neo4j.properties"
  }
  security {
    # HEX encoded 16 bytes
    tokenSecret = "01234567890123456789012345678901"
    
    # Sign up method
    # Possible values:
    #   OFF: sign up is not possible at all
    #   INVITE: sign up is possible with only invite
    #   ON: sign up is possible with both invite and call to /signup
    signUpMethod = "ON"
    
    # Sign up mode, what kinds of users are created when signing up.
    # Possible values:
    #   ADMIN: administrators sign up
    #   ALFA: alfa testers sign up 
    #   BETA: beta testers sign up
    #   NORMAL: normal users sign up
    signUpMode = "ADMIN"

    # Whether new collectives will be readable by all users
    # CRITICAL: Set this to false after first
    #           collectives have been added!
    commonCollectives = true
  }
  server {
    port = 8081
  }
  email {
    mailgun {
      domain = "ext.md"
      apiKey = "TEST KEY"
    }
    from = "extended mind <info@ext.md>"
    # URL for non-secure and secure pages
    urlPrefix = "http://localhost/landing/"
    secureUrlPrefix = "http://localhost/"
    templates {
      # Set this to use custom emails 
      # directory = "custom_email_template_directory"
      requestInviteConfirmationTitle = "get ready to extend your mind"
      requestInviteOrderNumberURI = "waiting.html?uuid=uuidValue"
      acceptInviteRequestTitle = "the wait is over"
      acceptInviteURI = "accept/inviteValue"
    }
  }
}

akka {
  log-config-on-start = off
  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  log-dead-letters = off
}

# check the reference.conf in spray-can/src/main/resources for all defined settings
spray.can.server {
  idle-timeout = 5 s
  request-timeout = 2 s
}

spray.routing {
  # Enables/disables more lenient HTTP header parsing
  # off = illegal HTTP headers are not accepted, an error message is produced
  # on = illegal HTTP headers are accepted as RawHeaders
  relaxed-header-parsing = on
}
