# Extended Mind Default configuration file.
#
# This file needs to be overridden in production with "-Dconfig.file=[]".

extendedmind {
  version = ${project.version}
  neo4j {
    storeDir = "target/neo4j-test"
    storeDir = ${?EXTENDEDMIND_BACKEND_STORE_DIRECTORY}
    isHighAvailability = false
    isHighAvailability = ${?EXTENDEDMIND_BACKEND_HA}
    propertiesFile = ${?EXTENDEDMIND_BACKEND_NEO4J_PROPERTIES}
  }
  security {
    # HEX encoded 16 bytes
    tokenSecret = "01234567890123456789012345678901"
    tokenSecret = ${?EXTENDEDMIND_BACKEND_TOKENSECRET}
    
    # Sign up method
    # Possible values:
    #   OFF: sign up is not possible at all
    #   INVITE: sign up is possible with only invite
    #   INVITE_COUPON: sign up possible either with invite or with special coupon defined below with signUpCoupon
    #   INVITE_AUTOMATIC: sign up using automatic inviting when requested when posting
    #   ON: sign up is possible with both invite and call to /signup
    signUpMethod = "ON"
    signUpMethod = ${?EXTENDEDMIND_BACKEND_SIGNUPMETHOD}

    # Sign up mode, what kinds of users are created when signing up.
    # Possible values:
    #   ADMIN: administrators sign up
    #   ALFA: alfa testers sign up 
    #   BETA: beta testers sign up
    #   NORMAL: normal users sign up
    signUpMode = "ALFA"
    signUpMode = ${?EXTENDEDMIND_BACKEND_SIGNUPMODE}
  }
  server {
    port = 8081
    port = ${?EXTENDEDMIND_BACKEND_PORT}
  }
  email {
    # Possible values:
    #  DUMMY: only store emails as files to given location
    #  MAILGUN: use mailgun to send emails
    provider = "DUMMY"
    provider = ${?EXTENDEDMIND_BACKEND_EMAILPROVIDER}
    mailgun {
      domain = "extendedmind.org"
      domain = ${?EXTENDEDMIND_BACKEND_MAILGUNDOMAIN}
      apiKey = "TEST KEY"
      apiKey = ${?EXTENDEDMIND_BACKEND_MAILGUNKEY}
    }
    dummy = "target/test-emails",
    from = "extended mind <support@extendedmind.org>"
    from = ${?EXTENDEDMIND_EMAILFROM}
    # url origin, given without trailing slash
    urlOrigin = "http://localhost"
    urlOrigin = ${?EXTENDEDMIND_URLORIGIN}
    templates {
      # Set this to use custom emails 
      # directory = "custom_email_template_directory"
      inviteTitle = "inviterDisplayName invited you to join extended mind"
      joinInviteURI = "/join/inviteValue?email=emailValue"
      shareListTitle = "proposedByDisplayName shared a list with you"
      acceptShareURI = "/accept/shareValue?email=emailValue"
      resetPasswordTitle = "password reset instructions"
      resetPasswordURI = "/reset/resetCodeValue?email=emailValue"
      verifyEmailTitle = "verify your email address"
      verifyEmailURI = "/verify/verifyCodeValue?email=emailValue"
    }
  }
  # Default values for rendering the UI is provided here
  ui = "{\"powered\": true, \"help\": false}"
  ui = ${?EXTENDEDMIND_UI}
}

akka {
  log-config-on-start = off
  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  log-dead-letters = off
  logger-startup-timeout = 30s  
}

# check the reference.conf in spray-can/src/main/resources for all defined settings
spray.can.server {
  idle-timeout = 60 s
  request-timeout = 20 s
  bind-timeout = 5 s
  unbind-timeout = 5 s
  registration-timeout = 5 s
}

spray.routing {
  # Enables/disables more lenient HTTP header parsing
  # off = illegal HTTP headers are not accepted, an error message is produced
  # on = illegal HTTP headers are accepted as RawHeaders
  relaxed-header-parsing = on
}
