<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.extendedmind</groupId>
    <artifactId>root</artifactId>
    <version>0-SNAPSHOT</version>
  </parent>
  <artifactId>e2e</artifactId>
  <packaging>pom</packaging>
  <name>Extended Mind :: End-to-end Tests </name>
  <description>Extended Mind End-to-end Tests</description>
  <url>https://github.com/extendedmind/extendedmind</url>
  <inceptionYear>2013</inceptionYear>

  <licenses>
    <license>
      <name>GNU Affero General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/agpl-3.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:extendedmind/extendedmind.git</connection>
    <developerConnection>scm:git:git@github.com:extendedmind/extendedmind.git</developerConnection>
    <url>git@github.com:extendedmind/extendedmind.git</url>
  </scm>

  <properties>
    <root.project.basedir>${project.parent.basedir}</root.project.basedir>
    <e2e.visualReviewDataRevision>4</e2e.visualReviewDataRevision>
    <e2e.urlOrigin>http://localhost:8008</e2e.urlOrigin>
    <e2e.mailgunDomain>extendedmind.org</e2e.mailgunDomain>
    <e2e.mailgunKey>TEST KEY</e2e.mailgunKey>
    <e2e.emailFrom>extended mind &lt;info@extendedmind.org&gt;</e2e.emailFrom>
    <e2e.emailProvider>DUMMY</e2e.emailProvider>
  </properties>

  <profiles>
    <profile>
      <id>live-browser</id>
      <activation>
        <property>
          <name>e2e.useLiveBrowser</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install node and npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <configuration>
                  <nodeVersion>${node.version}</nodeVersion>
                </configuration>
              </execution>
              <execution>
                <id>npm install</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>install</arguments>
                </configuration>
              </execution>
              <execution>
                <id>npm test</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <arguments>test</arguments>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <workingDirectory>src</workingDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>headless-browser</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>protractor-headless</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>sh</executable>
                  <commandlineArgs>protractor-headless.sh /protractor/test/protractor-headless-conf.js</commandlineArgs>
                  <background>false</background>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <developers>
    <developer>
      <id>ttiurani</id>
      <name>Timo Tiuraniemi</name>
      <email>timo.tiuraniemi@iki.fi</email>
    </developer>
    <developer>
      <id>jpsalo</id>
      <name>JP Salo</name>
      <email>jukapeka@gmail.com</email>
    </developer>
    <developer>
      <id>il0</id>
      <name>Tuomas Saarela</name>
      <email>tuomas.saarela@iki.fi</email>
    </developer>
  </developers>

  <dependencies>

    <dependency>
      <groupId>org.extendedmind</groupId>
      <artifactId>backend</artifactId>
      <type>test-jar</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.extendedmind.frontend</groupId>
      <artifactId>frontend-app</artifactId>
      <type>war</type>
      <scope>compile</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.extendedmind</groupId>
                  <artifactId>backend</artifactId>
                  <type>test-jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <includes>*.zip, testData.properties</includes>
                </artifactItem>
                <artifactItem>
                  <groupId>org.extendedmind.e2e</groupId>
                  <artifactId>test-visualreview</artifactId>
                  <version>${e2e.visualReviewDataRevision}</version>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/docker-dirs</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>copy</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.extendedmind.frontend</groupId>
                  <artifactId>frontend-app</artifactId>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <!-- This is needed sot that Docker doesn't make the dirs root:root -->
            <id>create-target-dirs</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="create-docker-dirs">
                <mkdir dir="target/docker-dirs/backend-logs" />
                <mkdir dir="target/docker-dirs/backend-emails" />
                <mkdir dir="target/docker-dirs/backend-backup" />
                <mkdir dir="target/docker-dirs/site-public/generated" />
                <mkdir dir="target/docker-dirs/site-public/files/test" />
                <mkdir dir="target/docker-dirs/site-public/assets" />
              </target>
            </configuration>
          </execution>
          <execution>
            <id>unzip-database</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="unzip-database">
                <unzip src="target/neo4j-test.zip" dest="target/docker-dirs/backend-data" />
              </target>
            </configuration>
          </execution>
       </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <executions>
          <execution>
            <id>deploy-war</id>
            <goals>
              <goal>deploy-war</goal>
            </goals>
            <configuration>
              <daemon>true</daemon>
              <reload>manual</reload>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <stopKey>testKey</stopKey>
          <stopPort>9999</stopPort>
          <war>${project.build.directory}/frontend-app-${project.version}.war</war>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
            <version>${jetty.version}</version>
            <type>jar</type>
            <scope>runtime</scope>
          </dependency>
          <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-rewrite</artifactId>
            <version>${jetty.version}</version>
            <type>jar</type>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <verbose>true</verbose>
          <images>
            <image>
              <name>quay.io/extendedmind/visualreview:vr-0.1.5</name>
              <alias>visualreview</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/vr/screenshots:/usr/vr/screenshots</volume>
                    <volume>${project.build.directory}/docker-dirs/vr/db:/usr/vr/db</volume>
                  </bind>
                </volumes>
                <ports>
                  <port>7000:7000</port>
                </ports>
              </run>
            </image>
            <image>
              <name>quay.io/extendedmind/backend</name>
              <alias>backend</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <env>
                  <JAVA_TOOL_OPTIONS>-Xmx512m</JAVA_TOOL_OPTIONS>
                </env>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/backend-emails:/app/backend-emails</volume>
                    <volume>${project.build.directory}/docker-dirs/backend-data:/app/backend-data</volume>
                    <volume>${project.build.directory}/docker-dirs/backend-logs:/var/log/extendedmind</volume>
                  </bind>
                </volumes>
                <ports>
                  <port>8007:8081</port>
                </ports>
                <cmd>
                  <arg>-Dextendedmind.neo4j.storeDir=/app/backend-data/neo4j</arg>
                  <arg>-Dextendedmind.security.tokenSecret=01234567890123456789012345678901</arg>
                  <arg>-Dextendedmind.security.signupMode=BETA</arg>
                  <arg>-Dextendedmind.email.urlOrigin=${e2e.urlOrigin}</arg>
                  <arg>-Dextendedmind.email.provider=${e2e.emailProvider}</arg>
                  <arg>-Dextendedmind.email.mailgun.domain=${e2e.mailgunDomain}</arg>
                  <arg>-Dextendedmind.email.mailgun.apiKey=${e2e.mailgunKey}</arg>
                  <arg>-Dextendedmind.email.from=${e2e.emailFrom}</arg>
                  <arg>-Dextendedmind.email.dummy=/app/backend-emails</arg>
                  <arg>-Dextendedmind.ui={}</arg>
                  <arg>-cp</arg>
                  <arg>/app/backend/lib/*</arg>
                  <arg>org.extendedmind.Server</arg>
                </cmd>
             </run>
            </image>
            <image>
              <name>quay.io/extendedmind/site-static</name>
              <alias>site-static</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/site-public/assets:/app/site-public/assets</volume>
                  </bind>
                </volumes>
              </run>
            </image>
            <image>
              <name>quay.io/extendedmind/site</name>
              <alias>site</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/site-public:/app/site-public</volume>
                  </bind>
                </volumes>
                <links>
                  <link>backend:backend</link>
                </links>
                <env>
                  <EXTENDEDMIND_URL>http://localhost:8008</EXTENDEDMIND_URL>
                </env>
              </run>
            </image>
            <image>
              <name>quay.io/extendedmind/nginx:nginx-1.13.0-1</name>
              <alias>nginx</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <from>
                    <image>site</image>
                  </from>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/site-public:/app/site-public:ro</volume>
                  </bind>
                </volumes>
                <links>
                  <link>backend:backend</link>
                  <link>site:site</link>
                </links>
                <ports>
                  <port>8008:8008</port>
                </ports>
              </run>
            </image>
            <image>
              <name>quay.io/extendedmind/backend-backup</name>
              <alias>backend-backup</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <links>
                  <link>backend:backend</link>
                </links>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/backend-backup:/app/backend-backup/archives</volume>
                  </bind>
                </volumes>
                <cmd>
                  <arg>/app/backend-backup/archives</arg>
                </cmd>
              </run>
            </image>
            <image>
              <name>quay.io/extendedmind/sync-folder</name>
              <alias>sync-folder</alias>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}/docker-dirs/site-public:/app/site-public</volume>
                  </bind>
                </volumes>
                <!-- To test, rsync all static files to /files/test -->
                <cmd>/app/site-public/assets/static /app/site-public/files/test</cmd>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
             <id>start-docker</id>
             <phase>pre-integration-test</phase>
             <goals>
               <goal>start</goal>
             </goals>
          </execution>
          <execution>
             <id>stop-docker</id>
             <phase>post-integration-test</phase>
             <goals>
               <goal>stop</goal>
             </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/src/etc</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/node</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/node_modules</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
