<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.extendedmind</groupId>
    <artifactId>frontend</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>
  <groupId>org.extendedmind.frontend</groupId>
  <artifactId>frontend-core</artifactId>
  <packaging>war</packaging>
  <name>Extended Mind :: Frontend :: Core</name>
  <description>Extended Mind Frontend Core</description>
  <url>https://github.com/extendedmind/extendedmind</url>
  <inceptionYear>2013</inceptionYear>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@github.com:extendedmind/extendedmind.git</connection>
    <developerConnection>scm:git:git@github.com:extendedmind/extendedmind.git</developerConnection>
    <url>git@github.com:extendedmind/extendedmind.git</url>
  </scm>
  <developers>
    <developer>
      <id>ttiurani</id>
      <name>Timo Tiuraniemi</name>
      <email>timo.tiuraniemi@iki.fi</email>
    </developer>
    <developer>
      <id>jpsalo</id>
      <name>JP Salo</name>
      <email>jukapeka@gmail.com</email>
    </developer>
    <developer>
      <id>il0</id>
      <name>Tuomas Saarela</name>
      <email>tuomas.saarela@iki.fi</email>
    </developer>
  </developers>

  <dependencies>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-proxy</artifactId>
      <version>${jetty.version}</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <version>4.0.3</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
  </dependencies>
  <profiles>
    <!-- PhantomJS profiles, copied from here: https://github.com/qa/arquillian-phantom-binary -->
    <!-- NOTE: http://stackoverflow.com/a/12181394 this needs to be in all
    projects that use PhantomJS as a dependency -->
<profile>
  <id>linux-64-phantomjs</id>
  <activation>
    <os>
      <name>linux</name>
      <arch>amd64</arch>
    </os>
  </activation>
  <properties>
    <phantomjs.url>http://phantomjs.googlecode.com/files/phantomjs-${phantomjs.version}-linux-x86_64.tar.bz2</phantomjs.url>
    <phantomjs.binary.directory>${project.build.directory}/phantomjs-${phantomjs.version}-linux-x86_64</phantomjs.binary.directory>
    <platform.classifier>linux-64</platform.classifier>
  </properties>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="download-phantomjs">
                <get src="${phantomjs.url}" dest="target/phantomjs-linux-64.tar.bz2"
                  verbose="on" skipexisting="true" />
                <bunzip2 src="target/phantomjs-linux-64.tar.bz2"
                  dest="target/phantomjs-linux-64.tar" />
                <untar src="target/phantomjs-linux-64.tar"
                  dest="target" />
                <chmod perm="a+x">
                  <fileset dir="${phantomjs.binary.directory}/bin">
                    <include name="phantomjs" />
                  </fileset>
                </chmod>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</profile>
<profile>
  <id>macosx-phantomjs</id>
  <!-- Reference mac profile here: https://github.com/qa/arquillian-phantom-binary/blob/master/pom.xml -->
  <activation>
    <os>
      <family>mac</family>
    </os>
  </activation>
  <properties>
    <target.os.family>macosx</target.os.family>
    <phantomjs.url>https://phantomjs.googlecode.com/files/phantomjs-${phantomjs.version}-macosx.zip</phantomjs.url>
    <phantomjs.binary.directory>${project.build.directory}/phantomjs-${phantomjs.version}-macosx</phantomjs.binary.directory>
    <platform.classifier>mac</platform.classifier>
  </properties>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="download-phantomjs">
                <get src="${phantomjs.url}" dest="target/phantomjs-macosx.zip"
                  verbose="on" skipexisting="true" />
                <unzip src="target/phantomjs-macosx.zip" dest="target" />
                <chmod perm="a+x">
                  <fileset dir="${phantomjs.binary.directory}/bin">
                    <include name="phantomjs" />
                  </fileset>
                </chmod>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</profile>
</profiles>
<build>
  <testSourceDirectory>${project.basedir}/src/main/webapp/test</testSourceDirectory>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-dependency-plugin</artifactId>
      <executions>
        <execution>
          <id>unpack</id>
          <phase>generate-test-resources</phase>
          <goals>
            <goal>unpack</goal>
          </goals>
          <configuration>
            <artifactItems>
              <artifactItem>
                <groupId>org.extendedmind</groupId>
                <artifactId>backend</artifactId>
                <type>test-jar</type>
                <overWrite>true</overWrite>
                <outputDirectory>${project.basedir}/src/main/webapp/test/json</outputDirectory>
                <includes>*.json</includes>
              </artifactItem>
            </artifactItems>
          </configuration>
        </execution>
      </executions>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-clean-plugin</artifactId>
      <configuration>
        <filesets>
          <fileset>
            <directory>${basedir}/src/main/webapp/static/</directory>
            <includes>
              <include>em.min.js</include>
              <include>em.min.css</include>
            </includes>
          </fileset>
          <fileset>
            <directory>${basedir}/src/main/webapp/test/json</directory>
          </fileset>
        </filesets>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-war-plugin</artifactId>
      <configuration>
        <archive>
          <manifest>
            <addClasspath>true</addClasspath>
          </manifest>
        </archive>
        <packagingExcludes>index_devel.html,
          test*/**,
          WEB-INF/wro.*,
          static/less*/**,
          static/js*/**,
          static/lib/less*/**,
          static/lib/jasmine*/**</packagingExcludes>
      </configuration>
    </plugin>
    <plugin>
      <groupId>com.github.searls</groupId>
      <artifactId>jasmine-maven-plugin</artifactId>
      <extensions>true</extensions>
      <executions>
        <execution>
          <goals>
            <goal>test</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
        <jsSrcDir>${project.basedir}/src/main/webapp/static</jsSrcDir>
        <jsTestSrcDir>${project.basedir}/src/main/webapp/test</jsTestSrcDir>
        <preloadSources>
          <source>lib/jasmine/jasmine-jquery.js</source>
          <source>jsonFixtures.js</source>
        </preloadSources>
        <sourceIncludes>
          <include>lib/jquery/jquery.js</include>
          <include>lib/jquery/jquery.cookie.js</include>
          <include>lib/angularjs/angular.js</include>
          <include>lib/angularjs/angular-route.js</include>
          <include>lib/angularjs/angular-mocks.js</include>
          <include>lib/angularjs/angular-animate.js</include>
          <include>lib/angularjs/angular-touch.js</include>
          <include>js/*.js</include>
          <include>js/**/*.js</include>
          <include>mockHelpers.js</include>
          <include>lib/base64.js</include>
        </sourceIncludes>
        <webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
        <webDriverCapabilities>
          <phantomjs.binary.path>${phantomjs.binary.directory}/bin/phantomjs</phantomjs.binary.path>
        </webDriverCapabilities>
      </configuration>
    </plugin>
    <plugin>
      <groupId>ro.isdc.wro4j</groupId>
      <artifactId>wro4j-maven-plugin</artifactId>
      <executions>
        <execution>
          <id>wro4j-production</id>
          <phase>prepare-package</phase>
          <goals>
            <goal>run</goal>
          </goals>
          <configuration>
            <targetGroups>em.min</targetGroups>
          </configuration>
        </execution>
      </executions>
      <configuration>
        <contextFolder>${basedir}/src/main/webapp/static</contextFolder>
        <wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
        <destinationFolder>${basedir}/src/main/webapp/static</destinationFolder>
        <cssDestinationFolder>${basedir}/src/main/webapp/static/</cssDestinationFolder>
        <jsDestinationFolder>${basedir}/src/main/webapp/static/</jsDestinationFolder>
      </configuration>
    </plugin>
  </plugins>
  <pluginManagement>
    <plugins>
      <!--This plugin's configuration is used to store Eclipse m2e settings
        only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
