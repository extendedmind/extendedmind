@import "foundation.less";
@import "icons.less";
@import "typography.less";

/*
<h1 class="main-heading">Inputs</h1>

All forms and buttons used in extended mind UI.
*/

/*

/*
******************************************************************
# Resets
*/

/*
* `<input>`, `<select>` and `<textarea>` use maximum width and inherit their background color.
* `<textarea>` height is @vertical-grid / 2 and uses `.break-words` (foundation.less)
*/
input, select, textarea {
  width: 100%;
  background-color: inherit;
  outline: none;
  border: none;
  box-shadow: none;
  padding: 0;
  background-image: none;
}

// 1. textarea is a replaced element so "---different browsers set it to different positions."
//    https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea
//    Some browsers set textarea to display: inline-block by default, which causes incostistent bottom margin,
//    set display: block by default. See http://stackoverflow.com/a/3454002
// 2. Set default line-height so different fonts and platforms will not change height.
textarea {
  display: block; // [1]
  min-height: @grid-vertical-half;
  height: @grid-vertical-half;
  line-height: @grid-vertical-half;  // [2]
  .break-words();
  resize: none;
}

// 1. Use same color in placeholders as in .downplayed.
::-webkit-input-placeholder {
   color: @color-text-downplayed; // [1]
}
:-moz-placeholder { /* Firefox 18- */
   color: @color-text-downplayed; // [1]
}
::-moz-placeholder {  /* Firefox 19+ */
   color: @color-text-downplayed; // [1]
}
:-ms-input-placeholder {
   color: @color-text-downplayed; // [1]
}

// 1. In iOS text in textarea is aligned slightly right.
//    See: http://stackoverflow.com/a/7029825 and
//    http://stackoverflow.com/questions/6890149/remove-3-pixels-in-ios-webkit-textarea#comment27305256_7029825
.ios textarea {
  margin-left: -3px;  // [1]
}

// 1. Align placeholder horizontally with textarea align in iOS.
.ios textarea::-webkit-input-placeholder {
  text-indent: 3px; // [1]
}

/*
******************************************************************
# Buttons
*/

@height-btn: @grid-vertical;
@size-btn-clear: 10px;

[class^="btn"], [class*=" btn"] {
  padding: 0;
  margin: 0;
  outline: 0;
  border: none;
  box-shadow: none;
  height: @height-btn;
  text-align: center;
}

/*
Use class `.btn` to remove all default button styling. Typically these
are `button` elements that have a logo as `label`.
*/
.btn {
  background-color: transparent;
}

.btn-action {
  font-size: @size-font-btn;
  .set-font-bold();
  color: white;
  background-color: transparent;
  & > .text-btn {
    background-color: @color-background-btn-active;
    display: inline-block;
    vertical-align: middle;
    width: 100%;
    line-height: @height-btn;
  }
  &:active > .text-btn {
    background-color: @color-background-btn-pressed;
  }
  &[disabled] > .text-btn {
    background-color: @color-background-btn-disabled;
  }
}

.btn-clear {
  background-color: transparent;
  &:after {
    color: @color-text;
    .set-icon-font;
    vertical-align: middle;
    font-size: @size-btn-clear;
    content: @icon-x;
  }
  &:active:after {
    color: @color-text-pressed;
  }
}


/*
******************************************************************
# Checkboxes
*/
@size-checkbox: 28px;

/*
Basic checkbox
*/

// TODO:  Write example when icons are working with styleguide.
//        Make labels also clickable (COMMENT: Why? -JP @ 2014-09-09)
label {
  cursor: pointer;
}
// Hide default HTML checkbox
input[type="checkbox"] {
  display: none;
}
input[type="checkbox"] + label:before {
  .set-icon-font;
  font-size: @size-checkbox;
  color: @color-text-downplayed-light;
  content: @icon-circle;
}

input[type="checkbox"]:checked + label:before {
  color: @color-text-highlighted;
  content: @icon-circle-checked;
}


.input-separate {
  margin-top: @grid-vertical-half;
}
