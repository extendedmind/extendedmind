/*
Only universal code that would work by itself in any web page.
*/

@import "normalize.less";
@import "variables.less";
@import "icon.less";

/*
# Positioning
*/


/*
`.center-horizontally` centers the container by making the browser to calculate left and right margins automatically.

```markup
<div class="center-horizontally" style="background:gray;max-width:100px;">&nbsp;</div>
```
*/
.center-horizontally {
  margin-left: auto;
  margin-right: auto;
}

/*
Use `.left-of-two` and `.right-of-two` to divide the horizontal space in two sections, separated by a white border.

```markup
<div class="left-of-two" style="background:gray;">&nbsp;</div>
<div class="right-of-two" style="background:gray;">&nbsp;</div>
```
*/
.left-of-two {
  float: left;
  width: 50%;
  border-right: 1px solid white;
}
.right-of-two {
  float: left;
  width: 50%;
}

/*
Similarly, use the following to divide to three sections:

* `left-of-three`
* `center-of-three`
* `right-of-three`

```markup
<div class="left-of-three" style="background:gray;">&nbsp;</div>
<div class="center-of-three" style="background:gray;">&nbsp;</div>
<div class="right-of-three" style="background:gray;">&nbsp;</div>
```
*/
.left-of-three {
  float: left;
  width: 33%;
  border-right: 1px solid white;
}
.center-of-three {
  float: left;
  width: 34%;
  border-right: 1px solid white;
}
.right-of-three {
  float: left;
  width: 33%;
}

/*
And to four sections:

* `left-of-four`
* `center-of-four`
* `center-of-four`
* `right-of-four`

```markup
<div class="left-of-four" style="background:gray;">&nbsp;</div>
<div class="center-of-four" style="background:gray;">&nbsp;</div>
<div class="center-of-four" style="background:gray;">&nbsp;</div>
<div class="right-of-four" style="background:gray;">&nbsp;</div>
```
*/
.left-of-four {
  float: left;
  width: 25%;
  border-right: 1px solid white;
}
.center-of-four {
  float: left;
  width: 25%;
  border-right: 1px solid white;
}
.right-of-four {
  float: left;
  width: 25%;
}

/*
`.horizontally-justified` justifies text horizontally.

```markup
<div class="horizontally-justified">Extended Mind is not just a nice brand name for a task manager or another note taking app. We are very serious about the fact that certain mental operations such as workflow management and declarative memory can be externalized. This will change the way you think.</div>
```
*/
.horizontally-justified {
  text-align: justify;
  * {
    display: inline;
  }
  .justified-element {
    display: inline-block;
  }
  #stretch {
    width: 100%;
    display: inline-block;
    font-size: 0;
    line-height: 0;
  }
}

/*
`.fade-color` fades to new color. Use the .fade-color mixin instead of the extracted code below.

* EXAMPLE NOT WORKING (probably :hover doesn't work with the styleguide)

```markup
<div style=":hover {
  color: red;
  -o-transition: 0.2 linear;
  -moz-transition: 0.2 linear;
  -khtml-transition: 0.2 linear;
  -webkit-transition: 0.2 linear;
  -ms-transition: 0.2 linear;
  transition: 0.2 linear;
  }
">Hover over me.</div>
```
*/
.fade-color {
  -o-transition: 0.2 linear;
  -moz-transition: 0.2 linear;
  -khtml-transition: 0.2 linear;
  -webkit-transition: 0.2 linear;
  -ms-transition: 0.2 linear;
  transition: 0.2 linear;
}

// TYPOGRAPHY

.font-bold {
  font-family: @font-bold;
  font-weight: 700;
}

.small-font {
  font-size: @small-font-size;
}

.smallest-font {
  font-size: @smallest-font-size;
}


// LINKS

.highlighted-link {
  color: @highlighted-element;
  &:hover {
    color: @highlighted-element-hover;
  }
  &:active {
    color: @highlighted-element-pressed;
  }
}

.warning-link {
  color: @warning;
}

.show-more {
  .smallest-font;
  display: inherit;
  .center-horizontally;
  text-align: center;
}


// BORDERS

.top-bottom-borders {
  border-top: solid 1px @default-element;
  border-bottom: solid 1px @default-element;
  border-color: @separator;
}

// SCREEN READERS

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

// SCROLLBARS

::-webkit-scrollbar {
  display: none;
}

// Temporary classes (to be refactored)
.default-element {
  color: @default-element;
}

// LISTS

.click-to-slide {
  span.icon-arrow-right {
    // Add small margin to prevent arrow from touching scrollbar
    // on desktop
    margin-right: 5px;
  }
}

.list-last {
  margin-bottom: @vertical-grid-half;
}

.arrow-link {
  line-height: @vertical-grid;
}

.rounded-corners {
  border-radius: @rounded-corner-radius;
}

.onboarding-bubble {
  position: relative;
  border: 1px solid @instruction;
  .rounded-corners;
  padding: 20px 10px;
  text-align: center;
  line-height: normal;
  span {
    color: @instruction;
  }
}

.onboarding-bubble:after, .onboarding-bubble:before {
  bottom: 100%;
  left: 15%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
}

.onboarding-bubble:after {
  border-color: rgba(255, 255, 255, 0);
  border-bottom-color: white;
  border-width: 15px;
  margin-left: -15px;
}
.onboarding-bubble:before {
  border-color: rgba(255, 255, 255, 0);
  border-bottom-color: @instruction;
  border-width: 16px;
  margin-left: -16px;
}

.danger-heading {
  color: @danger-text;
}

// CONTENT

.content {
  color: @content;
}
a.content:active {
  color: @content-pressed;
}

.instruction-text {
  color: @instruction;
  display: block;
  text-align: center;
  line-height: 19px;
  .icon-logo-only {
    font-size: @small-font-size;
  }
  .instruction-text-chapter {
    padding-bottom: @vertical-grid;
  }
  .instruction-text-chapter-details {
    font-size: @small-font-size;
    padding-bottom: @vertical-grid;
  }
}

.subheading {
  padding-top: @vertical-grid-half;
}

// MODALS

#policy-modal {
  .modal-dialog {
    width: 90%;
    margin: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    .modal-content {
      .modal-body {
        overflow-y: auto;
      }
      .modal-footer {
        padding: 15px 0 0 0;
        button {
          margin: 0;
        }
      }
    }
  }
}

.modal-dialog {
  max-width: @max-modal-width;
}

// ICOMOON TWEAKS
[class^="icon-"], [class*=" icon-"] {
  font-size: @icon-size;
  color: @icon;
}

.icon-arrow-right {
  font-size: @slide-indicator-width;
}

.icon-logo-with-text {
  color: @logo;
  font-size: @banner-logo-size;
}

// beta text
.web .icon-logo-with-text:after, .android .icon-logo-with-text:after {
  content: "beta";
  font-size: 10px;
  position: absolute;
  margin-left: -20px;
}

.icon-logo-only {
  color: @logo;
}

.icon-arrow-left {
  font-size: @slide-indicator-width;
}

// GRADIENTS

.edges-fade-to-white {
  /* IE10 Consumer Preview */
  background-image: -ms-linear-gradient(left, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 75%, #FFFFFF 100%);

  /* Mozilla Firefox */
  background-image: -moz-linear-gradient(left, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 75%, #FFFFFF 100%);

  /* Opera */
  background-image: -o-linear-gradient(left, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 75%, #FFFFFF 100%);

  /* Webkit (Safari/Chrome 10) */
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0, #FFFFFF), color-stop(0.2, rgba(255, 255, 255, 0)), color-stop(0.8, rgba(255, 255, 255, 0)), color-stop(1, #FFFFFF));

  /* Webkit (Chrome 11+) */
  background-image: -webkit-linear-gradient(left, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 75%, #FFFFFF 100%);

  /* W3C Markup, IE10 Release Preview */
  background-image: linear-gradient(to right, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 75%, #FFFFFF 100%);
}

.left-edge-fades-to-white {
  /* IE10 Consumer Preview */
  background-image: -ms-linear-gradient(left, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%);

  /* Mozilla Firefox */
  background-image: -moz-linear-gradient(left, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%);

  /* Opera */
  background-image: -o-linear-gradient(left, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%);

  /* Webkit (Safari/Chrome 10) */
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0, #FFFFFF), color-stop(0.2, rgba(255, 255, 255, 0)), color-stop(0.8, rgba(255, 255, 255, 0)), color-stop(1, #FFFFFF));

  /* Webkit (Chrome 11+) */
  background-image: -webkit-linear-gradient(left, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%);

  /* W3C Markup, IE10 Release Preview */
  background-image: linear-gradient(to right, #FFFFFF 0%, rgba(255, 255, 255, 0) 25%);
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}
@-moz-keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}
@-webkit-keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fade-out {
  from { opacity: 1; }
  to { opacity: 0; }
}
@-moz-keyframes fade-out {
  from { opacity: 1; }
  to { opacity: 0; }
}
@-webkit-keyframes fade-out {
  from { opacity: 1; }
  to { opacity: 0; }
}

// WORD BREAKING
// http://kenneth.io/blog/2012/03/04/word-wrapping-hypernation-using-css/
.break-words {

  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-all;

  /* Non standard for webkit */
  word-break: break-word;

  // For Firefox to hyphenate correctly
  // we would need LANG to be set by the user
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
}
