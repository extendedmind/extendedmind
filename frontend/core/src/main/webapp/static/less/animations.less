@import "foundation.less";
@import "inputs.less";

/*

<h1 class="main-heading">Animations</h1>

*/

@timing-animate: cubic-bezier(0.250, 0.460, 0.450, 0.940);
@timing-animate-steep: cubic-bezier(.01, 1.11, 0, .97);
@timing-animate-gradual: cubic-bezier(.97,.01,.93,.63);

@speed-animate-item-fade: 1s;
@speed-animate-item-shrink: .5s;
@delay-animate-item-shrink: .5s;
@timing-animate-item: @timing-animate;

@speed-animate-toaster-fade: .5s;
@timing-animate-toaster: @timing-animate;

@speed-animate-btn-completed-fade: 1s;
@timing-animate-btn-completed: @timing-animate-gradual;

@speed-animate-calendar-fade: .3s;
@timing-animate-calendar: @timing-animate;

@speed-animate-date-active: .2s;
@timing-animate-date-active: @timing-animate-steep;

// 1. Set initial max-height for item to make max-height animation work in WebKit browsers.
.animate-list-item-leave {
  max-height: 44px; // [1]
}

// 1. Animate opacity first, delay max-height animation by 0.5s.
.animate-list-item-leave.ng-leave {
  -webkit-transition-property: opacity, max-height;                                   // [1]
  -webkit-transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;  // [1]
  -webkit-transition-timing-function: @timing-animate-item, @timing-animate-item;     // [1]
  -webkit-transition-delay: 0s, @delay-animate-item-shrink;                           // [1]

  -moz-transition-property: opacity, max-height;                                      // [1]
  -moz-transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;     // [1]
  -moz-transition-timing-function: @timing-animate-item, @timing-animate-item;        // [1]
  -moz-transition-delay: 0s, @delay-animate-item-shrink;                              // [1]

  -o-transition-property: opacity, max-height;                                        // [1]
  -o-transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;       // [1]
  -o-transition-timing-function: @timing-animate-item, @timing-animate-item;          // [1]
  -o-transition-delay: 0s, @delay-animate-item-shrink;                                // [1]

  -ms-transition-property: opacity, max-height;                                       // [1]
  -ms-transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;      // [1]
  -ms-transition-timing-function: @timing-animate-item, @timing-animate-item;         // [1]
  -ms-transition-delay: 0s, @delay-animate-item-shrink;                               // [1]

  transition-property: opacity, max-height;                                           // [1]
  transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;          // [1]
  transition-timing-function: @timing-animate-item, @timing-animate-item;             // [1]
  transition-delay: 0s, @delay-animate-item-shrink;                                   // [1]
}

// 1. Fade out and shrink .list-item
.animate-list-item-leave.ng-leave.ng-leave-active {
  opacity: 0;     // [1]
  max-height: 0;  // [1]
}

// .list-item-leave is added to an element when we want the element to be removed from list.
// Class postfixes: "-add" and "-add-active" are added by angular $animate service.
// 1. TODO: remove when grid is implemented and correct values are inherited
.animate-list-item-leave.ng-leave {
  pointer-events: none;
  max-height: 44px; // [1]
  opacity: 1;       // [1]
}

// Animate checkbox checking
input[type="checkbox"]:checked + label:before {
  transition: color 2s cubic-bezier(.01,1.11,0,.97);
}

// 1. Simple fade-in-out animation.
.animate-toaster.ng-enter, .animate-toaster.ng-leave {
  -webkit-transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;  // [1]
  -moz-transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;     // [1]
  -o-transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;       // [1]
  -ms-transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;      // [1]
  transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;          // [1]
}

// 1. Starting point for fade in and ending point for fade out.
.animate-toaster.ng-enter,
.animate-toaster.ng-leave.ng-leave-active {
  opacity: 0; // [1]
}

// 1. Starting point for fade out and ending point for fade in.
.animate-toaster.ng-leave,
.animate-toaster.ng-enter.ng-enter-active {
  opacity: 1; // [1]
}

// 1. Simple fade-in-out animation.
.animate-btn-completed {
  -webkit-transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;  // [1]
  -moz-transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;     // [1]
  -o-transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;       // [1]
  -ms-transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;      // [1]
  transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;          // [1]
}

// 1. Starting point for fade in and ending point for fade out.
.animate-btn-completed.ng-enter,
.animate-btn-completed.ng-leave.ng-leave-active {
  opacity: 0; // [1]
}

// 1. Starting point for fade out and ending point for fade in.
.animate-btn-completed.ng-leave,
.animate-btn-completed.ng-enter.ng-enter-active {
  opacity: 1; // [1]
}

// 1. Highlight selected date with bold font.
// 2. Animate background-color.
// TODO:  Add border-radius when correct height (and dimensions) is set.
.animate-calendar-selected-date {
  -webkit-transition: background-color @speed-animate-date-active @timing-animate-date-active ; // [2]
  -moz-transition: background-color @speed-animate-date-active @timing-animate-date-active;    // [2]
  -o-transition: background-color @speed-animate-date-active @timing-animate-date-active;      // [2]
  -ms-transition: background-color @speed-animate-date-active @timing-animate-date-active;     // [2]
  transition: background-color @speed-animate-date-active @timing-animate-date-active;         // [2]
  .set-font-bold; // [1]
  background-color: @color-background-highlighted; // [2]
}

// 1. Crossfade between calendar and date field.
//    We are animating entering part of ng-if only, because:
//      Date field: ng-if="!calendarOpen"
//      Calendar:   ng-if="calendarOpen"
.animate-calendar.ng-enter {
  pointer-events: none;
  -webkit-transition: opacity @speed-animate-calendar-fade @timing-animate-calendar;  // [1]
  -moz-transition: opacity @speed-animate-calendar-fade @timing-animate-calendar;     // [1]
  -o-transition: opacity @speed-animate-calendar-fade @timing-animate-calendar;       // [1]
  -ms-transition: opacity @speed-animate-calendar-fade @timing-animate-calendar;      // [1]
  transition: opacity @speed-animate-calendar-fade @timing-animate-calendar;          // [1]
}

// 1. Fade in
.animate-calendar.ng-enter {
  opacity: 0; // [1]
}

// 1. Fade in
.animate-calendar.ng-enter.ng-enter-active {
  opacity: 1; // [1]
}

@expanded-position-editor: 135px;
@speed-animate-editor-toggle: .3s;

// 1. Animate editor to expanded position with translate3d.
.animate-editor-footer-open {
  -webkit-transform: translate3d(0, -@expanded-position-editor, 0); // [1]
  -mox-transform: translate3d(0, -@expanded-position-editor, 0);    // [1]
  -o-transform: translate3d(0, -@expanded-position-editor, 0);      // [1]
  -ms-transform: translate3d(0, -@expanded-position-editor, 0);     // [1]
  transform: translate3d(0, -@expanded-position-editor, 0);         // [1]
}

.animate-editor-footer-open-add {
  -webkit-transition: -webkit-transform @speed-animate-editor-toggle @timing-animate;
  -moz-transition: -moz-transform @speed-animate-editor-toggle @timing-animate;
  -o-transition: -o-transform @speed-animate-editor-toggle @timing-animate;
  -ms-transition: -ms-transform @speed-animate-editor-toggle @timing-animate;
  transition: transform @speed-animate-editor-toggle @timing-animate;
}

.animate-editor-footer-open-remove {
  -webkit-transition: -webkit-transform @speed-animate-editor-toggle @timing-animate;
  -moz-transition: -moz-transform @speed-animate-editor-toggle @timing-animate;
  -o-transition: -o-transform @speed-animate-editor-toggle @timing-animate;
  -ms-transition: -ms-transform @speed-animate-editor-toggle @timing-animate;
  transition: transform @speed-animate-editor-toggle @timing-animate;
}
