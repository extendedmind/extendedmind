@import "foundation.less";
@import "inputs.less";

/*

<h1 class="main-heading">Animations</h1>

*/

@speed-animation-menu: .2s;

@timing-animate: cubic-bezier(0.250, 0.460, 0.450, 0.940);
@timing-animate-steep: cubic-bezier(.01, 1.11, 0, .97);
@timing-animate-gradual: cubic-bezier(.97, .01, .93, .63);

@speed-animate-item-fade: .5s;
@speed-animate-item-shrink: .4s;
@delay-animate-item-shrink: .6s;
@timing-animate-item: @timing-animate;

@speed-animate-checkbox-checked: 3s;
@speed-animate-checkbox-checked-highlighted: 1.5s;
@speed-animate-checkbox-checked-downplayed: 1.5s;
@delay-animate-checkbox-checked-downplayed: 1.5s;

@speed-animate-toaster-fade: .5s;
@timing-animate-toaster: @timing-animate;

@speed-animate-btn-completed-fade: 1s;
@timing-animate-btn-completed: @timing-animate-gradual;

@speed-animate-fade-in: .3s;
@timing-animate-fade-in: @timing-animate;

@speed-animate-date-active: .2s;
@timing-animate-date-active: @timing-animate-gradual;

// 1. Animate maximum width change when menu opens and closes.
// 2. Animate maximum height change when soft keyboard opens and closes.
.animate-container-master {
  -webkit-transition: max-width @speed-animation-menu ease-out; // [1,2]
  -moz-transition: max-width @speed-animation-menu ease-out;    // [1,2]
  -o-transition: max-width @speed-animation-menu ease-out;      // [1,2]
  -ms-transition: max-width @speed-animation-menu ease-out;     // [1,2]
  transition: max-width @speed-animation-menu ease-out;         // [1,2]
}

// 1. Set initial max-height for item to make max-height animation work in WebKit browsers.
.animate-list-item-leave {
  max-height: @grid-vertical * 1.5; // [1]
}

.animate-list-item-leave.tall {
  max-height: @grid-vertical * 3; // [1]
}

// 1. Animate opacity first, delay max-height animation by 0.5s.
.animate-list-item-leave.ng-leave {
  -webkit-transition-property: opacity, max-height;                                   // [1]
  -webkit-transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;  // [1]
  -webkit-transition-timing-function: @timing-animate-item, @timing-animate-item;     // [1]
  -webkit-transition-delay: 0s, @delay-animate-item-shrink;                           // [1]

  -moz-transition-property: opacity, max-height;                                      // [1]
  -moz-transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;     // [1]
  -moz-transition-timing-function: @timing-animate-item, @timing-animate-item;        // [1]
  -moz-transition-delay: 0s, @delay-animate-item-shrink;                              // [1]

  -o-transition-property: opacity, max-height;                                        // [1]
  -o-transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;       // [1]
  -o-transition-timing-function: @timing-animate-item, @timing-animate-item;          // [1]
  -o-transition-delay: 0s, @delay-animate-item-shrink;                                // [1]

  -ms-transition-property: opacity, max-height;                                       // [1]
  -ms-transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;      // [1]
  -ms-transition-timing-function: @timing-animate-item, @timing-animate-item;         // [1]
  -ms-transition-delay: 0s, @delay-animate-item-shrink;                               // [1]

  transition-property: opacity, max-height;                                           // [1]
  transition-duration: @speed-animate-item-fade, @speed-animate-item-shrink;          // [1]
  transition-timing-function: @timing-animate-item, @timing-animate-item;             // [1]
  transition-delay: 0s, @delay-animate-item-shrink;                                   // [1]
}

// 1. Fade out and shrink .list-item
.animate-list-item-leave.ng-leave.ng-leave-active {
  opacity: 0;     // [1]
  max-height: 0;  // [1]
}

.animate-list-item-leave.ng-leave {
  pointer-events: none;
  opacity: 1;       // [1]
}

// FIXME
.animate-list-item-leave.ng-leave.ng-leave-active + .no-items-prompt {
  opacity: 1;
  transition: opacity 1s linear;
}

// FIXME
.animate-list-item-leave.ng-leave + .no-items-prompt {
  opacity: 0;
}

// Animate checkbox checking.
input[type="checkbox"]:checked + label:before {
  -webkit-transition: color 2s @timing-animate-steep; // [1,2]
  -moz-transition: color 2s @timing-animate-steep;    // [1,2]
  -o-transition: color 2s @timing-animate-steep;      // [1,2]
  -ms-transition: color 2s @timing-animate-steep;     // [1,2]
  transition: color 2s @timing-animate-steep;
}

// 1. Clear default checkox transition.
// 2. Downplay with grayish color.
// 3. Downplay with gray color.
.checkbox-checked:not(.checkbox-checked-active) {
  input[type="checkbox"]:checked + label:before {
    -webkit-transition: none; // [1]
    -moz-transition: none;    // [1]
    -o-transition: none;      // [1]
    -ms-transition: none;     // [1]
    transition: none;         // [1]
    color: @color-text-downplayed-light;  // [2]
  }
  .text-link {
    color: @color-text-downplayed;  // [3]
  }
}

// 1. First highlight checkbox, then downplay it.
// 2. Start with grayish color.
// 3. Downplay with gray color.
.checkbox-checked-active {
  input[type="checkbox"]:checked + label:before {
    color: @color-text-downplayed-light;  // [2]

    -webkit-animation-name: checkbox-checked-hightlighted, checkbox-checked-downplayed; // [1]
    -webkit-animation-duration: @speed-animate-checkbox-checked-highlighted, @speed-animate-checkbox-checked-downplayed;
    -webkit-animation-timing-function: @timing-animate-steep, @timing-animate-gradual;
    -webkit-animation-delay: 0s, @delay-animate-checkbox-checked-downplayed;

    animation-name: checkbox-checked-hightlighted, checkbox-checked-downplayed; // [1]
    animation-duration: @speed-animate-checkbox-checked-highlighted, @speed-animate-checkbox-checked-downplayed;
    animation-timing-function: @timing-animate-steep, @timing-animate-gradual;
    animation-delay: 0s, @delay-animate-checkbox-checked-downplayed;
  }
  .text-link {
    color: @color-text-downplayed;  // [3]

    -webkit-transition-property: color;
    -webkit-transition-duration: @speed-animate-checkbox-checked-downplayed;
    -webkit-transition-timing-function: @timing-animate-gradual;
    -webkit-transition-delay: @delay-animate-checkbox-checked-downplayed;

    -moz-transition-property: color;
    -moz-transition-duration: @speed-animate-checkbox-checked-downplayed;
    -moz-transition-timing-function: @timing-animate-gradual;
    -moz-transition-delay: @delay-animate-checkbox-checked-downplayed;

    -o-transition-property: color;
    -o-transition-duration: @speed-animate-checkbox-checked-downplayed;
    -o-transition-timing-function: @timing-animate-gradual;
    -o-transition-delay: @delay-animate-checkbox-checked-downplayed;

    -ms-transition-property: color;
    -ms-transition-duration: @speed-animate-checkbox-checked-downplayed;
    -ms-transition-timing-function: @timing-animate-gradual;
    -ms-transition-delay: @delay-animate-checkbox-checked-downplayed;

    transition-property: color;
    transition-duration: @speed-animate-checkbox-checked-downplayed;
    transition-timing-function: @timing-animate-gradual;
    transition-delay: @delay-animate-checkbox-checked-downplayed;
  }
}

@-webkit-keyframes checkbox-checked-hightlighted {
  from {color: @color-text-downplayed-light;}
  to {color: @color-text-highlighted;}
}
@keyframes checkbox-checked-hightlighted {
  from {color: @color-text-downplayed-light;}
  to {color: @color-text-highlighted;}
}

@-webkit-keyframes checkbox-checked-downplayed {
  from {color: @color-text-highlighted;}
  to {color: @color-text-downplayed-light;}
}
@keyframes checkbox-checked-downplayed {
  from {color: @color-text-highlighted;}
  to {color: @color-text-downplayed-light;}
}

// 1. Simple fade-in-out animation.
.animate-toaster.ng-enter, .animate-toaster.ng-leave {
  -webkit-transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;  // [1]
  -moz-transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;     // [1]
  -o-transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;       // [1]
  -ms-transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;      // [1]
  transition: opacity @speed-animate-toaster-fade @timing-animate-toaster;          // [1]
}

// 1. Starting point for fade in and ending point for fade out.
.animate-toaster.ng-enter,
.animate-toaster.ng-leave.ng-leave-active {
  opacity: 0; // [1]
}

// 1. Starting point for fade out and ending point for fade in.
.animate-toaster.ng-leave,
.animate-toaster.ng-enter.ng-enter-active {
  opacity: 1; // [1]
}

// 1. Fade-in animation for show completed tasks button.
.animate-btn-completed.ng-enter {
  -webkit-transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;  // [1]
  -moz-transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;     // [1]
  -o-transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;       // [1]
  -ms-transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;      // [1]
  transition: opacity @speed-animate-btn-completed-fade @timing-animate-btn-completed;          // [1]
}

// 1. Starting point for show completed tasks button fade in.
.animate-btn-completed.ng-enter {
  opacity: 0; // [1]
}

// 1. Ending point for show completed tasks button fade in.
.animate-btn-completed.ng-enter.ng-enter-active {
  opacity: 1; // [1]
}

// 1. Starting point for animation.
// 2. Place a 0s transition here to ensure that the styles are applied instantly
//    even if the element already has a transition style.
.animate-calendar-selected-date-add {
  opacity: 0; // [1]

  -webkit-transition: opacity 0s @timing-animate-date-active; // [2]
  -moz-transition: opacity 0s @timing-animate-date-active;    // [2]
  -o-transition: opacity 0s @timing-animate-date-active;      // [2]
  -ms-transition: opacity 0s @timing-animate-date-active;     // [2]
  transition: opacity 0s @timing-animate-date-active;         // [2]
}

// 1. Perform opacity animation.
.animate-calendar-selected-date-add.animate-calendar-selected-date-add-active {
  opacity: 1; // [1]

  -webkit-transition: opacity @speed-animate-date-active @timing-animate-date-active; // [1]
  -moz-transition: opacity @speed-animate-date-active @timing-animate-date-active;    // [1]
  -o-transition: opacity @speed-animate-date-active @timing-animate-date-active;      // [1]
  -ms-transition: opacity @speed-animate-date-active @timing-animate-date-active;     // [1]
  transition: opacity @speed-animate-date-active @timing-animate-date-active;         // [1]
}

// 1. Fade in (and out). Animating only ng-enter part of ng-if in fade in, and ng-hide.
.animate-fade-in.ng-enter, .animate-fade-in.ng-hide-remove,
.animate-fade-in-out.ng-hide-add, .animate-fade-in-out.ng-hide-remove,
.animate-fade-in-out.ng-enter, .animate-fade-in-out.ng-leave {
  pointer-events: none;
  -webkit-transition: opacity @speed-animate-fade-in @timing-animate-fade-in;  // [1]
  -moz-transition: opacity @speed-animate-fade-in @timing-animate-fade-in;     // [1]
  -o-transition: opacity @speed-animate-fade-in @timing-animate-fade-in;       // [1]
  -ms-transition: opacity @speed-animate-fade-in @timing-animate-fade-in;      // [1]
  transition: opacity @speed-animate-fade-in @timing-animate-fade-in;          // [1]
}

// 1. Fade in start.
.animate-fade-in.ng-hide-remove,
.animate-fade-in.ng-enter {
  opacity: 0; // [1]
}

// 1. Fade in end.
.animate-fade-in.ng-hide-remove.ng-hide-remove-active,
.animate-fade-in.ng-enter.ng-enter-active {
  opacity: 1; // [1]
}

// 1. Fade out start.
.animate-fade-in-out.ng-hide-add,
.animate-fade-in-out.ng-leave {
  opacity: 1; // [1]
}
// 1. Fade out end.
.animate-fade-in-out.ng-hide-add.ng-hide-add-active,
.animate-fade-in-out.ng-leave.ng-leave-active {
  opacity: 0;
}
// 1. Fade in start.
.animate-fade-in-out.ng-hide-remove,
.animate-fade-in-out.ng-enter {
  opacity: 0;
}
// 1. Fade in end.
.animate-fade-in-out.ng-hide-remove.ng-hide-remove-active,
.animate-fade-in-out.ng-enter.ng-enter-active {
  opacity: 1;
}

@speed-animate-editor-footer-toggle: .3s;

// 1. Animate editor to expanded position.
.animate-editor-footer-open-add {
  -webkit-transition: -webkit-transform @speed-animate-editor-footer-toggle @timing-animate;
  -moz-transition: -moz-transform @speed-animate-editor-footer-toggle @timing-animate;
  -o-transition: -o-transform @speed-animate-editor-footer-toggle @timing-animate;
  -ms-transition: -ms-transform @speed-animate-editor-footer-toggle @timing-animate;
  transition: transform @speed-animate-editor-footer-toggle @timing-animate;
}

// 1. Override transform style applied directly into element by $animate.addClass options.
.animate-editor-footer-close {
  -webkit-transition: -webkit-transform @speed-animate-editor-footer-toggle @timing-animate;
  -moz-transition: -moz-transform @speed-animate-editor-footer-toggle @timing-animate;
  -o-transition: -o-transform @speed-animate-editor-footer-toggle @timing-animate;
  -ms-transition: -ms-transform @speed-animate-editor-footer-toggle @timing-animate;
  transition: transform @speed-animate-editor-footer-toggle @timing-animate;

  -webkit-transform: translate3d(0, 0, 0) !important; // [1]
  -moz-transform: translate3d(0, 0, 0) !important; // [1]
  -o-transform: translate3d(0, 0, 0) !important; // [1]
  -ms-transform: translate3d(0, 0, 0) !important; // [1]
  transform: translate3d(0, 0, 0) !important; // [1]
}

@speed-animation-editor: .35s;


// 1. Darken container background with animation when editor is opening.
//    Reset container backgroung with animation when editor is closing.
.editor-open.animate-container-master {
  background-color: @color-background-editor-inactive;  // [1]
}

.editor-visible .editor-animating.animate-container-master {
  -webkit-transition: background-color @speed-animation-editor @timing-animate; // [1]
  -moz-transition: background-color @speed-animation-editor @timing-animate;    // [1]
  -o-transition: background-color @speed-animation-editor @timing-animate;      // [1]
  -ms-transition: background-color @speed-animation-editor @timing-animate;     // [1]
  transition: background-color @speed-animation-editor @timing-animate;         // [1]
  background-color: white;
}

.editor-hidden .editor-animating.animate-container-master {
  -webkit-transition: background-color @speed-animation-editor @timing-animate; // [1]
  -moz-transition: background-color @speed-animation-editor @timing-animate;    // [1]
  -o-transition: background-color @speed-animation-editor @timing-animate;      // [1]
  -ms-transition: background-color @speed-animation-editor @timing-animate;     // [1]
  transition: background-color @speed-animation-editor @timing-animate;         // [1]
  background-color: @color-background-editor-inactive;                          // [1]
}

// 1. Initial source: http://stackoverflow.com/a/13017201
.container-fluid--inner:not(.swiper-container),
.swiper-slide-active {
  .one {
    -webkit-animation: dot-first 2s infinite; // [1]
    animation: dot-first 2s infinite;         // [1]
  }
  .two {
    -webkit-animation: dot-second 2s infinite;  // [1]
    animation: dot-second 2s infinite;          // [1]
  }
  .three {
    -webkit-animation: dot-third 2s infinite; // [1]
    animation: dot-third 2s infinite;         // [1]
  }
}

@-webkit-keyframes dot-first {
  0% {
    opacity: 0;
  }
  25% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}
@keyframes dot-first {
  0% {
    opacity: 0;
  }
  25% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}

@-webkit-keyframes dot-second {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  75% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}
@keyframes dot-second {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  75% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}

@-webkit-keyframes dot-third {
  0% {
    opacity: 0;
  }
  75% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes dot-third {
  0% {
    opacity: 0;
  }
  75% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
