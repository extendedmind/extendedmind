@import "foundation.less";

// Columns
@one-column-grid-width: 568px; // iPhone 5 landscape is still one column
@two-column-grid-width: 720px;
@two-column-grid-main-width: 66.66%;
@two-column-grid-aside-width: 33.33%;

// iPad specifies the maximum width and height of the content area
@maximum-width: 1025px;
@maximum-height: 1025px;
@maximum-landscape-height: 769px;
@fixed-page-height: 500px;

/*
`.center-horizontally` centers the container by making the browser to calculate left and right margins automatically.

```markup
<div class="center-horizontally" style="background:gray;max-width:100px;">&nbsp;</div>
```
*/
.center-horizontally {
  margin-left: auto;
  margin-right: auto;
}

/*
Use `.left-of-two` and `.right-of-two` to divide the horizontal space in two sections, separated by a white border.

```markup
<div class="left-of-two" style="background:gray;">&nbsp;</div>
<div class="right-of-two" style="background:gray;">&nbsp;</div>
```
*/
.left-of-two {
  float: left;
  width: 50%;
  border-right: 1px solid white;
}
.right-of-two {
  float: left;
  width: 50%;
}

/*
Similarly, use the following to divide to three sections:

* `left-of-three`
* `center-of-three`
* `right-of-three`

```markup
<div class="left-of-three" style="background:gray;">&nbsp;</div>
<div class="center-of-three" style="background:gray;">&nbsp;</div>
<div class="right-of-three" style="background:gray;">&nbsp;</div>
```
*/
.left-of-three {
  float: left;
  width: 33%;
  border-right: 1px solid white;
}
.center-of-three {
  float: left;
  width: 34%;
  border-right: 1px solid white;
}
.right-of-three {
  float: left;
  width: 33%;
}

/*
And to four sections:

* `left-of-four`
* `center-of-four`
* `center-of-four`
* `right-of-four`

```markup
<div class="left-of-four" style="background:gray;">&nbsp;</div>
<div class="center-of-four" style="background:gray;">&nbsp;</div>
<div class="center-of-four" style="background:gray;">&nbsp;</div>
<div class="right-of-four" style="background:gray;">&nbsp;</div>
```
*/
.left-of-four {
  float: left;
  width: 25%;
  border-right: 1px solid white;
}
.center-of-four {
  float: left;
  width: 25%;
  border-right: 1px solid white;
}
.right-of-four {
  float: left;
  width: 25%;
}

/*
`.horizontally-justified` justifies text horizontally.

```markup
<div class="horizontally-justified">Extended Mind is not just a nice brand name for a task manager or another note taking app. We are very serious about the fact that certain mental operations such as workflow management and declarative memory can be externalized. This will change the way you think.</div>
```
*/
.horizontally-justified {
  text-align: justify;
  * {
    display: inline;
  }
  .justified-element {
    display: inline-block;
  }
  #stretch {
    width: 100%;
    display: inline-block;
    font-size: 0;
    line-height: 0;
  }
}

.list-last {
  margin-bottom: @vertical-grid-half;
}

// GRID
div#root {
  line-height: @vertical-grid;
  max-height: @maximum-height;
  .center-horizontally;
  position: relative;

  .one-column-grid, .two-column-grid, .column {
    min-height: inherit;
    min-width: inherit;
  }
  .column {
    position: relative;
    width: 100%;
  }
}

.one-column-grid {
  padding-left: @horizontal-grid;
  padding-right: @horizontal-grid;
  max-width: @one-column-grid-width;
  .center-horizontally;
}

.two-column-grid {
  max-width: @two-column-grid-width;
  .center-horizontally;
  padding-left: @horizontal-grid;
  aside.column, div.column {
    width: auto;
    padding-right: @horizontal-grid;
  }
  aside.column {
    max-width: @two-column-grid-aside-width;
  }
  div.column {
    max-width: @two-column-grid-main-width;
  }
}

// HEADER

header {
  z-index: 1;
  top: 0px;
  left: 0px;
  overflow: hidden;
  width: 100%;
  * {
    vertical-align: middle;
  }
}

.static-page-header {
  height: @page-header-height;
  position: relative;
  nav {
    max-width: @one-column-grid-width;
    margin-left: auto;
    margin-right: auto;
    .active-item-container {
      width: 23%;
      height: @page-header-height;
      float: left;
    }
    .heading-container {
      // NOTE: this width percentage is used in HeadingController.js!
      width: 54%;
      height: @page-header-height;
      float: left;
      display: table;
      .heading {
        display: table-cell;
        vertical-align: middle;
        text-align: center;
      }
    }
    .omni-button-container {
      width: 23%;
      height: @page-header-height;
      float: right;
      text-align: right;
    }
  }
}

.heading-header {
  position: relative;
  text-align: center;
  min-height: @heading-header-height;
  h3 {
    padding-top: 18px;
  }
}

// CONTENT

.page-content-container {
  height: 100%;
  padding-top: @page-header-height + 12px;
  padding-bottom: @footer-height;

  .inner-page-content-container {
    height: inherit;
    position: relative;
    overflow-y: auto;
    display: block;
  }
  .inner-slide-content-container {
    height: inherit;
    section {
      height: inherit;
      overflow-y: auto;
    }
  }
  .accordion-wrapper {
    // NOTE: Due to mysterous iphone laggy accordion, height,
    // nor probably anything else can not be set here.
    // Don't add anything here if you don't know how to test
    // the laggy accordion bug.
    // height: inherit;
  }
}

.simple-content-container {
  height: inherit;
  padding-bottom: @heading-header-height + @vertical-grid-half;
  overflow-y: auto;
}

.single-page-content-container {
  overflow-y: hidden;
  .scroll-container {
    height: inherit;
    overflow-y: auto;
  }
}

// SWIPER

.swiper-container, .swiper-wrapper, .swiper-slide {
  height: inherit !important;
  width: 100%;
}

.swiper-container.main-slides {
  margin-top: -@page-header-height;
  margin-bottom: -@footer-height;
}

.single-page-container {
  margin-bottom: -@footer-height;
}

.hide-footer .swiper-container.main-slides, .hide-footer .single-page-container {
  margin-bottom: 0;
}

.hide-footer .page-content-container {
  padding-bottom: @vertical-grid-half;
}

// NO SWIPER

.no-slides-container {
  .single-page-container {
    height: 100%;
    .single-page {
      margin-top: -@page-header-height;
      height: inherit;
      position: relative;
    }
  }
}

// RESPONSIVE

// We want to horizontally and vertically center everything
// once the screen size is bigger than a tablet
@media (min-height: @maximum-landscape-height) {
  body {
    .no-slides-container {
      position: relative;
      min-height: @maximum-landscape-height;
      max-height: @maximum-landscape-height;
      margin-top: -@maximum-landscape-height / 2;
      top: 50%;
    }
    .slides-container {
      position: inherit;
      top: 50%;
      min-height: @maximum-landscape-height;
      max-height: @maximum-landscape-height;
      margin-top: -@maximum-landscape-height / 2;
    }
  }
}

// Pages with fixed content need a smaller height
@media (min-height: @fixed-page-height) {
  section.fixed-height {
    min-height: @fixed-page-height !important;
    max-height: @fixed-page-height !important;
  }
}

// For smaller screens, aside is hidden, and we revert to single column width

// FIXME: FORCING ONE COLUMN TO EVERYONE
//@media (max-width: @maximum-width) {
  .two-column-grid, .two-column-grid div.column, footer, .two-column-grid header {
    max-width: @one-column-grid-width;
  }
  aside {
    display: none;
  }
//}


// LOGIN / SIGNUP / LAUNCH

@login-content-height: @vertical-grid*5.1;

section#login, section#signup, section#launch, section#waiting, section#forgot, section#verify {
  .column {
    overflow-y: auto;
    .banner {
      padding-bottom: @vertical-grid / 10;
      span {
        width: 200px;
        display: block;
        text-align: center;
        .center-horizontally;
      }
      // Make content a "sticky footer"
      min-height: 100%;
      margin-bottom: -@login-content-height;
      padding-top: @vertical-grid * 1.5;
    }
    .banner:after {
      content: "";
      display: block;
      height: @login-content-height;
    }
    .content {
      height: @login-content-height;
      .button-container {
        padding-top: @vertical-grid / 2;
        padding-bottom: @vertical-grid / 2;
      }
    }
  }
  .icon-logo-with-text {
    padding-bottom: 25px;
  }
}

section#waiting {
  .column {
    .banner {
      margin-bottom: -@vertical-grid * 5.5;
    }
    .content {
      .instruction-text {
        h1 {
          line-height: 200%;
        }
        padding-bottom: @vertical-grid / 2;
      }
      #input-coupon {
        text-align: center;
      }
    }
  }
  .waiting-coupon {
    .banner {
      margin-bottom: -@vertical-grid * 6.5;
    }
  }
}

section#launch {
  .column {
    .content {
      div#email {
        padding-bottom: @vertical-grid;
      }
    }
  }
}

section#forgot, section#verify {
  .column {
    .banner {
      margin-bottom: -@vertical-grid * 7.5;
    }
    .content {
      .instruction-text {
        p {
          height: @vertical-grid / 2;
          vertical-align: middle;
        }
      }
    }
    #instructions-success {
      .instruction-text {
        padding-bottom: @vertical-grid;
      }
    }
  }
}

// ABOUT PAGE
#about-help {
  line-height: @vertical-grid-half;
}

// SIMPLE CONTENT

.simple-content {
  padding-bottom: @vertical-grid;
}

.simple-content:last-child {
  padding-bottom: 0;
}

.tasks-notes-container {
  padding-top: @vertical-grid-half;
}

// ERRORS
#errorMessage {
  h3 {
    text-align: center;
    padding-bottom: @vertical-grid;
  }
}

.add-element {
  // Add @vertical grid to make room for 'add [item]...' input
  padding-bottom: @vertical-grid-half;
}
