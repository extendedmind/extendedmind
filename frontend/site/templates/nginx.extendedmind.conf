
server {
  listen 8008;
  server_name localhost;

  rewrite_log on;
  error_log /var/log/nginx/localhost.error_log notice;

  # 1. app paths, and rewrite them to index.html
  location ~* ^/(my|entry|login|collective|signup|unsupported|verify|reset|accept|invalid|admin|new) {
    root /app/site-public/assets;
    rewrite ~* /index.html break;
  }

  # 2. static assets
  location /static {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }

    alias /app/site-public/assets/static;
    add_header 'Access-Control-Allow-Origin' "*";
    add_header 'Access-Control-Allow-Methods' 'GET';
  }

  # 3. dynamic assets
  location ~* ^/(files|generated) {
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }

    root /app/site-public;
    add_header 'Access-Control-Allow-Origin' "*";
    add_header 'Access-Control-Allow-Methods' 'GET';
  }

  # 4. API to backend
  location /api {
    if ($request_uri ~ /api/v2/shutdown.*) {
      return 403;
    }
    if ($request_uri ~ /api/v2/tick.*) {
      return 403;
    }
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }

    rewrite /api(.*) $1 break;
    proxy_pass http://backend-external:8081;
    proxy_redirect     off;
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

    add_header 'Access-Control-Allow-Origin' "*" always;
    add_header 'Access-Control-Allow-Credentials' 'true'  always;
    add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With' always;
  }

  # 5. optional custom configuration
  ${extraNginxConf}

  # 6. every other URL is handled by the site module
  location / {
    # temporary hack to rewrite root to download url for iDevices and Android
    uninitialized_variable_warn off;
    if ($request_uri = /) {
      set $test root;
    }
    if ($http_user_agent ~* '(iPhone|iPod|iPad|Android)') {
      set $test "${test}+mobile";
    }
    if ($test = root+mobile) {
      rewrite ^ /download break;
    }

    # send all the rest to the site component
    proxy_pass http://${nginxSitePrefix}site:3000;
    proxy_redirect     off;
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
  }
}
