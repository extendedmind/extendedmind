<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.extendedmind</groupId>
    <artifactId>frontend</artifactId>
    <version>0-SNAPSHOT</version>
  </parent>
  <groupId>org.extendedmind.frontend</groupId>
  <artifactId>frontend-app</artifactId>
  <packaging>war</packaging>
  <name>Extended Mind :: Frontend :: App</name>
  <description>Extended Mind Frontend App</description>
  <url>https://github.com/extendedmind/extendedmind</url>
  <inceptionYear>2013</inceptionYear>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@github.com:extendedmind/extendedmind.git</connection>
    <developerConnection>scm:git:git@github.com:extendedmind/extendedmind.git</developerConnection>
    <url>git@github.com:extendedmind/extendedmind.git</url>
  </scm>
  <developers>
    <developer>
      <id>ttiurani</id>
      <name>Timo Tiuraniemi</name>
      <email>timo.tiuraniemi@iki.fi</email>
    </developer>
    <developer>
      <id>jpsalo</id>
      <name>JP Salo</name>
      <email>jukapeka@gmail.com</email>
    </developer>
    <developer>
      <id>il0</id>
      <name>Tuomas Saarela</name>
      <email>tuomas.saarela@iki.fi</email>
    </developer>
  </developers>

  <properties>
    <root.project.basedir>${project.parent.parent.basedir}</root.project.basedir>
  </properties>

  <profiles>
    <profile>
      <id>debug-minified</id>
      <activation>
        <property>
          <name>debug</name>
        </property>
      </activation>
      <properties>
        <activeWroProperties>wro-debug.properties</activeWroProperties>
      </properties>
    </profile>

    <profile>
      <id>closure-minified</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <activeWroProperties>wro-production.properties</activeWroProperties>
      </properties>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-proxy</artifactId>
      <version>${jetty.version}</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <version>4.0.3</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <testSourceDirectory>${project.basedir}/src/test</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.extendedmind</groupId>
                  <artifactId>backend</artifactId>
                  <type>test-jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.basedir}/src/test/json</outputDirectory>
                  <includes>*.json</includes>
                </artifactItem>
                <artifactItem>
                  <groupId>org.extendedmind</groupId>
                  <artifactId>phantomjs</artifactId>
                  <type>zip</type>
                  <classifier>dist</classifier>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/static</directory>
              <includes>
                <include>em.min.js</include>
              </includes>
            </fileset>
            <fileset>
              <directory>${basedir}/static/css</directory>
              <includes>
                <include>em.css</include>
              </includes>
            </fileset>
            <fileset>
              <directory>${basedir}/src/test/json</directory>
            </fileset>
            <fileset>
              <directory>${basedir}/src/static/fonts</directory>
              <includes>
                <include>Source+*</include>
                <include>fonts.css</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <nodeVersion>v8.11.2</nodeVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <workingDirectory>src</workingDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warSourceDirectory>src</warSourceDirectory>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
            </manifest>
          </archive>
          <webResources>
            <resource>
              <directory>src</directory>
              <includes>
                <include>index.html</include>
              </includes>
              <filtering>true</filtering>
            </resource>
            <resource>
              <directory>src/WEB-INF</directory>
              <includes>
                <include>jetty-web.xml</include>
                <include>urlrewrite.xml</include>
                <include>web.xml</include>
              </includes>
            </resource>
            <resource>
              <directory>src/static</directory>
              <targetPath>static/${project.version}</targetPath>
              <excludes>
                <exclude>**/*.jshintrc</exclude>
                <exclude>app/**/*.js</exclude>
                <exclude>common/**/*.js</exclude>
                <exclude>less/**</exclude>
                <exclude>lib/**</exclude>
              </excludes>
            </resource>
          </webResources>
          <packagingIncludes>
            WEB-INF/**,
            META-INF/**,
            index.html,
            static/${project.version}/**
          </packagingIncludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jsSrcDir>${project.basedir}/src/static</jsSrcDir>
          <jsTestSrcDir>${project.basedir}/src/test</jsTestSrcDir>
          <preloadSources>
            <source>lib/jasmine/jasmine-jquery.js</source>
            <source>jsonFixtures.js</source>
          </preloadSources>
          <sourceIncludes>
            <include>lib/jquery/jquery.js</include>
            <include>lib/angularjs/angular.js</include>
            <include>lib/angularjs/angular-animate.js</include>
            <include>lib/angularjs/angular-mocks.js</include>
            <include>lib/angularjs/angular-route.js</include>
            <include>lib/angularjs/angular-messages.js</include>
            <include>lib/angularjs/angular-sanitize.js</include>
            <include>lib/base64.js</include>
            <include>lib/elastic.js</include>
            <include>lib/clamp.js</include>
            <include>lib/lawnchair/lawnchair.js</include>
            <include>lib/lawnchair/lawnchair-memory.js</include>
            <include>lib/markdown-it/markdown-it.js</include>
            <include>lib/diff_match_patch/diff_match_patch.js</include>
            <include>app/*.js</include>
            <include>common/common.js</include>
            <include>common/*.js</include>
            <include>app/**/*.js</include>
          </sourceIncludes>
          <webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
          <webDriverCapabilities>
            <capability>
              <name>phantomjs.binary.path</name>
              <value>${project.build.directory}/phantomjs-${phantomjs.version}/${platform.classifier}/bin/phantomjs</value>
            </capability>
          </webDriverCapabilities>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.extendedmind</groupId>
        <artifactId>lesscss-maven-plugin</artifactId>
        <version>1.7.4.1.0</version>
        <executions>
          <execution>
            <id>lesscss</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sourceDirectory>${project.basedir}/src/static</sourceDirectory>
          <compress>true</compress>
          <includes>
            <include>less/em.less</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>ro.isdc.wro4j</groupId>
        <artifactId>wro4j-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>wro4j</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <targetGroups>em.min</targetGroups>
              <wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <wroFile>${basedir}/src/WEB-INF/wro.xml</wroFile>
          <extraConfigFile>${basedir}/src/WEB-INF/${activeWroProperties}</extraConfigFile>
          <contextFolder>${basedir}</contextFolder>
          <destinationFolder>${basedir}/src/static</destinationFolder>
          <jsDestinationFolder>${basedir}/src/static/</jsDestinationFolder>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-em-unpacked</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/src/static/css/</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/less/</directory>
                  <includes>
                    <include>em.css</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
