# From https://github.com/google/cargo-raze#remote-dependency-mode
[package]
name = "compile_with_bazel"
version = "0.0.0"

# Mandatory (or Cargo tooling is unhappy)
[lib]
path = "fake_lib.rs"

[dependencies]
automerge = { git = "https://github.com/automerge/automerge-rs.git", rev = "e72571962b51c2f0726fb534890ef3b4f7c74dfc" }
duct = "=0.13.4"
hypercore = { git = "https://github.com/ttiurani/hypercore", rev = "f9cd0fcf190ff892529678e9249197f0b14969d1" }
hypercore-protocol = { git = "https://github.com/ttiurani/hypercore-protocol-rs", rev = "4ef9856762b21e1bcaf1e5ba70d115a3bbbff5e4", features = ["wasm-bindgen"] }
async-tungstenite = { version = "0.13.1", features = ["async-std-runtime"] }
bytes = "0.5.0"
fern = "0.6.0"
log = "0.4.14" # See below for hack to get the dependency value-bag to work with build.rs
anyhow = "1.0.33"
clap = { version = "3.0.0-rc.5", features = ["derive"] } # See below for hack to get #![doc = include_str!("../README.md")] to work
chrono = { version = "0.4.19" }
futures = "^0.3.5"
async-std = { version = "1.9.0", features = ["unstable"] }
async-attributes = "1.1.2"
async-trait = "0.1.51"
tide = "0.16.0"
tide-websockets = "0.4.0"
tide-compress = "0.9.0"
moka = { version = "0.8.4", default-features = false, features = ["atomic64", "future"] }
wildmatch = "2.1.0"
html-escape = "0.2.11"
ctrlc = { version = "3.0", features = ["termination"] }
async-ctrlc = "1.2.0"
random-access-disk = { git = "https://github.com/ttiurani/random-access-disk", rev = "6b17771d174722bff442dba9aaf633aae4f3e40f" }
random-access-memory = { git = "https://github.com/ttiurani/random-access-memory", rev = "e48f2a9040656724327ae30d12ab636c3bf0a074" }
random-access-storage = { git = "https://github.com/ttiurani/random-access-storage", rev = "16412bab28f8f8d0c4b6b71a25f6646e0910180b" }
hex = "0.4"
reusable-box-future = "0.2.0"
derivative = "2.2.0"
capnp = "0.14.5"
smol_str = "0.1.18"
# Wasm dependencies
# NOTE: This version needs to match that of rules_rust
wasm-bindgen = "=0.2.78" # See below for hack to get #![doc = include_str!("../README.md")] to work
wasm-bindgen-futures = "0.4.28"
ws_stream_wasm = "0.7.3" # See below two hacks to get #![doc = include_str!("../README.md")] to work
js-sys = "0.3.55"
console_error_panic_hook = "0.1.7"
console_log = "0.2.0"
# Android dependencies
jni = "0.19.0"

# Needed for log to build
[package.metadata.raze.crates.value-bag.'1.0.0-alpha.8']
gen_buildrs = false
override_rustc_flags = """
    [ "--cap-lints=allow" ] +
    selects.with_or({
        (
            "@rules_rust//rust/platform:wasm32-unknown-unknown",
        ): ["--cfg=value_bag_capture_fallback"],
        "//conditions:default": ["--cfg=value_bag_capture_ctor"],
    })
"""

# Needed for libc to build
[package.metadata.raze.crates.cpufeatures.'0.2.2']
override_deps = """
    [
    ] + selects.with_or({
        # aarch64-linux-android
        (
            "@rules_rust//rust/platform:aarch64-linux-android",
            "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
        ): [
            "@raze__libc__0_2_126//:libc",
        ],
        "//conditions:default": [],
    })
"""

# Needed for clap to build
[package.metadata.raze.crates.clap.'3.0.0-rc.5']
compile_data_attr = "glob([\"README.md\"])"
[package.metadata.raze.crates.clap_derive.'3.0.0-rc.5']
compile_data_attr = "glob([\"README.md\"])"

# Needed for ws_stream_wasm to build
[package.metadata.raze.crates.pharos.'0.5.3']
compile_data_attr = "glob([\"README.md\"])"
[package.metadata.raze.crates.async_io_stream.'0.3.3']
compile_data_attr = "glob([\"README.md\"])"

# Needed for wasm-bindgen to build
[package.metadata.raze.crates.bumpalo.'3.9.1']
compile_data_attr = "glob([\"README.md\"])"

# Needed for hypercore to build
[package.metadata.raze.crates.ed25519.'1.4.1']
compile_data_attr = "glob([\"README.md\"])"

[package.metadata.raze]
workspace_path = "//third_party/cargo"
package_aliases_dir = "."
genmode = "Remote"
default_gen_buildrs = true
targets = [
    "x86_64-apple-darwin",
    "x86_64-pc-windows-msvc",
    "x86_64-unknown-linux-gnu",
    "wasm32-unknown-unknown",
    "aarch64-unknown-linux-gnu",
    "aarch64-linux-android",
    "arm-linux-androideabi",
    "i686-linux-android",
    "x86_64-linux-android",
]
