"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT OR Apache-2.0"
])

# Generated Targets

# Unsupported target "memory" with type "bench" omitted

# Unsupported target "async" with type "example" omitted

# Unsupported target "iter" with type "example" omitted

# Unsupported target "main" with type "example" omitted

rust_library(
    name = "hypercore",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "async-std",
        "intmap",
        "v10",
    ],
    crate_root = "src/lib.rs",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=hypercore",
        "manual",
    ],
    version = "0.11.1-beta.10",

    # buildifier: leave-alone
    deps = [
        "@raze__anyhow__1_0_69//:anyhow",
        "@raze__async_std__1_12_0//:async_std",
        "@raze__bitfield_rle__0_2_0//:bitfield_rle",
        "@raze__blake2_rfc__0_2_18//:blake2_rfc",
        "@raze__byteorder__1_4_3//:byteorder",
        "@raze__crc32fast__1_3_2//:crc32fast",
        "@raze__ed25519_dalek__1_0_1//:ed25519_dalek",
        "@raze__flat_tree__5_0_0//:flat_tree",
        "@raze__futures__0_3_26//:futures",
        "@raze__intmap__2_0_0//:intmap",
        "@raze__lazy_static__1_4_0//:lazy_static",
        "@raze__memory_pager__0_9_0//:memory_pager",
        "@raze__merkle_tree_stream__0_12_1//:merkle_tree_stream",
        "@raze__pretty_hash__0_4_1//:pretty_hash",
        "@raze__rand__0_7_3//:rand",
        "@raze__random_access_memory__2_0_0//:random_access_memory",
        "@raze__random_access_storage__4_0_0//:random_access_storage",
        "@raze__sha2__0_9_9//:sha2",
        "@raze__sleep_parser__0_8_0//:sleep_parser",
        "@raze__sparse_bitfield__0_11_0//:sparse_bitfield",
        "@raze__tree_index__0_6_1//:tree_index",
    ] + selects.with_or({
        # cfg(not(target_arch = "wasm32"))
        (
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
            "@rules_rust//rust/platform:aarch64-linux-android",
            "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@rules_rust//rust/platform:i686-linux-android",
            "@rules_rust//rust/platform:x86_64-linux-android",
        ): [
            "@raze__random_access_disk__2_0_0//:random_access_disk",
        ],
        "//conditions:default": [],
    }),
)


# Unsupported target "bitfield" with type "test" omitted

# Unsupported target "compact_encoding" with type "test" omitted

# Unsupported target "compat" with type "test" omitted

# Unsupported target "core" with type "test" omitted

# Unsupported target "feed" with type "test" omitted

# Unsupported target "js_interop" with type "test" omitted

# Unsupported target "model" with type "test" omitted

# Unsupported target "regression" with type "test" omitted

# Unsupported target "storage" with type "test" omitted
