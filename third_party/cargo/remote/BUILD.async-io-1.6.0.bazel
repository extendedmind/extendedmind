"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # Apache-2.0 from expression "Apache-2.0 OR MIT"
])

# Generated Targets

# Unsupported target "linux-inotify" with type "example" omitted

# Unsupported target "linux-timerfd" with type "example" omitted

# Unsupported target "unix-signal" with type "example" omitted

# Unsupported target "windows-uds" with type "example" omitted

rust_library(
    name = "async_io",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "1.6.0",
    # buildifier: leave-alone
    deps = [
        "@raze__concurrent_queue__1_2_2//:concurrent_queue",
        "@raze__futures_lite__1_12_0//:futures_lite",
        "@raze__log__0_4_14//:log",
        "@raze__once_cell__1_8_0//:once_cell",
        "@raze__parking__2_0_0//:parking",
        "@raze__polling__2_1_0//:polling",
        "@raze__slab__0_4_4//:slab",
        "@raze__socket2__0_4_1//:socket2",
        "@raze__waker_fn__1_1_0//:waker_fn",
    ] + selects.with_or({
        # cfg(target_os = "linux")
        (
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(unix)
        (
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__libc__0_2_101//:libc",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(windows)
        (
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "@raze__winapi__0_3_9//:winapi",
        ],
        "//conditions:default": [],
    }),
)

# Unsupported target "async" with type "test" omitted

# Unsupported target "timer" with type "test" omitted
