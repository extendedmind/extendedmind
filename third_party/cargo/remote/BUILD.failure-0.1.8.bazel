"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT OR Apache-2.0"
])

# Generated Targets

# Unsupported target "bail_ensure" with type "example" omitted

# Unsupported target "error_as_cause" with type "example" omitted

# Unsupported target "simple" with type "example" omitted

# Unsupported target "string_custom_error_pattern" with type "example" omitted

rust_library(
    name = "failure",
    srcs = glob(["**/*.rs"]),
    crate_features = [
        "backtrace",
        "default",
        "derive",
        "failure_derive",
        "std",
    ],
    crate_root = "src/lib.rs",
    data = [],
    edition = "2015",
    proc_macro_deps = [
        "@raze__failure_derive__0_1_8//:failure_derive",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=failure",
        "manual",
    ],
    version = "0.1.8",

    # buildifier: leave-alone
    deps = [
        "@raze__backtrace__0_3_64//:backtrace",
    ],
)

# Unsupported target "basic_fail" with type "test" omitted

# Unsupported target "fail_compat" with type "test" omitted

# Unsupported target "macro_trailing_comma" with type "test" omitted
