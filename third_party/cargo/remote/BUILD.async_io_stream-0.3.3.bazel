"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "unencumbered",  # Unlicense from expression "Unlicense"
])

# Generated Targets
# buildifier: disable=out-of-order-load
# buildifier: disable=load-on-top
load(
    "@rules_rust//cargo:cargo_build_script.bzl",
    "cargo_build_script",
)

cargo_build_script(
    name = "async_io_stream_build_script",
    srcs = glob(["**/*.rs"]),
    build_script_env = {
    },
    crate_features = [
        "map_pharos",
        "pharos",
    ],
    crate_root = "build.rs",
    data = glob(["**"]),
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.3.3",
    visibility = ["//visibility:private"],
    deps = [
        "@raze__rustc_version__0_4_0//:rustc_version",
    ],
)

rust_library(
    name = "async_io_stream",
    srcs = glob(["**/*.rs"]),
    crate_features = [
        "map_pharos",
        "pharos",
    ],
    crate_root = "src/lib.rs",
    data = [],
    compile_data = glob(["README.md"]),
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.3.3",

    # buildifier: leave-alone
    deps = [
        ":async_io_stream_build_script",
        "@raze__futures__0_3_21//:futures",
        "@raze__pharos__0_5_3//:pharos",
    ],
)
