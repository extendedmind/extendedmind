"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT OR Apache-2.0"
])

# Generated Targets

# Unsupported target "log" with type "example" omitted

# Unsupported target "million" with type "example" omitted

rust_library(
    name = "femme",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    proc_macro_deps = [
        "@raze__serde_derive__1_0_130//:serde_derive",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "2.1.1",
    # buildifier: leave-alone
    deps = [
        "@raze__cfg_if__0_1_10//:cfg_if",
        "@raze__log__0_4_14//:log",
        "@raze__serde__1_0_130//:serde",
        "@raze__serde_json__1_0_68//:serde_json",
    ] + selects.with_or({
        # cfg(target_arch = "wasm32")
        (
            "@rules_rust//rust/platform:wasm32-wasi",
        ): [
            "@raze__js_sys__0_3_55//:js_sys",
            "@raze__wasm_bindgen__0_2_78//:wasm_bindgen",
            "@raze__web_sys__0_3_55//:web_sys",
        ],
        "//conditions:default": [],
    }),
)
