"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # Apache-2.0 from expression "Apache-2.0 OR MIT"
])

# Generated Targets

rust_library(
    name = "crypto_secretstream",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "alloc",
        "default",
        "std",
    ],
    crate_root = "src/lib.rs",
    data = [],
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=crypto_secretstream",
        "manual",
    ],
    version = "0.1.1",

    # buildifier: leave-alone
    deps = [
        "@raze__aead__0_5_1//:aead",
        "@raze__chacha20__0_9_0//:chacha20",
        "@raze__poly1305__0_8_0//:poly1305",
        "@raze__rand_core__0_6_4//:rand_core",
        "@raze__subtle__2_4_1//:subtle",
    ] + selects.with_or({
        # cfg(target_family = "wasm")
        (
            "@rules_rust//rust/platform:wasm32-unknown-unknown",
        ): [
            "@raze__getrandom__0_2_8//:getrandom",
        ],
        "//conditions:default": [],
    }),
)


# Unsupported target "lib" with type "test" omitted

# Unsupported target "sodiumoxide" with type "test" omitted
